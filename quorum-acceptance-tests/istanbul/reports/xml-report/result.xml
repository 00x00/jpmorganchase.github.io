<testsuites>
	<testsuite id="1" tests="5" failures="5" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/externally_signed_private_raw_smart_contract_single.spec" time="0.172" timestamp="2019-03-12T16:34:16" name="Private raw smart contract when signed externally" errors="0" hostname="travis-job-36a3b9ae-614f-40e4-9ef1-3406c17236d8">
		<properties></properties>
		<testcase classname="Private raw smart contract when signed externally" name="Contract is mined" time="0.037">
			<failure message="Contract is mined&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Contract is mined&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Private raw smart contract when signed externally" name="Storage Root storing private smart contracts must be the same" time="0.032">
			<failure message="Storage Root storing private smart contracts must be the same&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Storage Root storing private smart contracts must be the same&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Private raw smart contract when signed externally" name="Transaction payload is secured" time="0.033">
			<failure message="Transaction payload is secured&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Transaction payload is secured&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Private raw smart contract when signed externally" name="Privacy is enforced between parties" time="0.036">
			<failure message="Privacy is enforced between parties&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Privacy is enforced between parties&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Private raw smart contract when signed externally" name="When there&#39;s an update, privacy is still enforced" time="0.034">
			<failure message="When there&#39;s an update, privacy is still enforced&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="When there&#39;s an update, privacy is still enforced&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="2" tests="1" failures="1" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_spam.spec" time="0.032" timestamp="2019-03-12T16:34:16" name="Multiple private smart contracts between nodes" errors="0" hostname="travis-job-36a3b9ae-614f-40e4-9ef1-3406c17236d8">
		<properties></properties>
		<testcase classname="Multiple private smart contracts between nodes" name="Send transactions from one node to others" time="0.032">
			<failure message="Send transactions from one node to others&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Send transactions from one node to others&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="3" tests="4" failures="4" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/smart_contract_dual_state.spec" time="0.144" timestamp="2019-03-12T16:34:16" name="Dual state implementation when peforming function calls from one smart contract to another" errors="0" hostname="travis-job-36a3b9ae-614f-40e4-9ef1-3406c17236d8">
		<properties></properties>
		<testcase classname="Dual state implementation when peforming function calls from one smart contract to another" name="Function calls between all public smart contracts: public -&gt; public -&gt; public" time="0.033">
			<failure message="Function calls between all public smart contracts: public -&gt; public -&gt; public&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Function calls between all public smart contracts: public -&gt; public -&gt; public&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Dual state implementation when peforming function calls from one smart contract to another" name="Function calls between all private smart contracts: private -&gt; private -&gt; private" time="0.039">
			<failure message="Function calls between all private smart contracts: private -&gt; private -&gt; private&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Function calls between all private smart contracts: private -&gt; private -&gt; private&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Dual state implementation when peforming function calls from one smart contract to another" name="Function calls from a private smart contract to public smart contracts: private -&gt; public -&gt; public" time="0.033">
			<failure message="Function calls from a private smart contract to public smart contracts: private -&gt; public -&gt; public&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Function calls from a private smart contract to public smart contracts: private -&gt; public -&gt; public&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Dual state implementation when peforming function calls from one smart contract to another" name="Function calls from a public smart contract to private smart contracts: public -&gt; private -&gt; private" time="0.039">
			<failure message="Function calls from a public smart contract to private smart contracts: public -&gt; private -&gt; private&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Function calls from a public smart contract to private smart contracts: public -&gt; private -&gt; private&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="4" tests="2" failures="2" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/value_transfer_public_transactions.spec" time="0.069" timestamp="2019-03-12T16:34:16" name="Value transfer in public transactions" errors="0" hostname="travis-job-36a3b9ae-614f-40e4-9ef1-3406c17236d8">
		<properties></properties>
		<testcase classname="Value transfer in public transactions" name="Successful public transaction submission" time="0.037">
			<failure message="Successful public transaction submission&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Successful public transaction submission&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Value transfer in public transactions" name="Successful signed public transaction submission" time="0.032">
			<failure message="Successful signed public transaction submission&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Successful signed public transaction submission&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="5" tests="7" failures="7" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/estimate_gas.spec" time="0.354" timestamp="2019-03-12T16:34:16" name="Estimate gas required for transactions and contracts" errors="0" hostname="travis-job-36a3b9ae-614f-40e4-9ef1-3406c17236d8">
		<properties></properties>
		<testcase classname="Estimate gas required for transactions and contracts" name="Estimate gas required for public transaction" time="0.139">
			<failure message="Estimate gas required for public transaction&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Estimate gas required for public transaction&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Estimate gas required for transactions and contracts" name="Deploy public smart contract, this is used for estimating the calls (we also need it so we can use the binary data in the estimateGas() acceptance tests below)" time="0.048">
			<failure message="Deploy public smart contract, this is used for estimating the calls (we also need it so we can use the binary data in the estimateGas() acceptance tests below)&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Deploy public smart contract, this is used for estimating the calls (we also need it so we can use the binary data in the estimateGas() acceptance tests below)&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Estimate gas required for transactions and contracts" name="Estimate gas required to create public smart contract" time="0.036">
			<failure message="Estimate gas required to create public smart contract&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Estimate gas required to create public smart contract&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Estimate gas required for transactions and contracts" name="Estimate gas required to call a public smart contract" time="0.033">
			<failure message="Estimate gas required to call a public smart contract&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Estimate gas required to call a public smart contract&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Estimate gas required for transactions and contracts" name="Deploy private smart contract, this is used for estimating the calls (we also need it so we can use the binary data in the estimateGas() acceptance tests below)" time="0.032">
			<failure message="Deploy private smart contract, this is used for estimating the calls (we also need it so we can use the binary data in the estimateGas() acceptance tests below)&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Deploy private smart contract, this is used for estimating the calls (we also need it so we can use the binary data in the estimateGas() acceptance tests below)&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Estimate gas required for transactions and contracts" name="Estimate gas required to create private smart contract" time="0.033">
			<failure message="Estimate gas required to create private smart contract&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Estimate gas required to create private smart contract&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Estimate gas required for transactions and contracts" name="Estimate gas required to call a private smart contract" time="0.033">
			<failure message="Estimate gas required to call a private smart contract&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Estimate gas required to call a private smart contract&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="6" tests="1" failures="1" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/istanbul_fault_tolerance.spec" time="0.036" timestamp="2019-03-12T16:34:16" name="Istanbul fault tolerance and recoverability" errors="0" hostname="travis-job-36a3b9ae-614f-40e4-9ef1-3406c17236d8">
		<properties></properties>
		<testcase classname="Istanbul fault tolerance and recoverability" name="Modify number of validators from less than 2F + 1 to more than 2F + 1" time="0.036">
			<failure message="Modify number of validators from less than 2F + 1 to more than 2F + 1&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Modify number of validators from less than 2F + 1 to more than 2F + 1&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="7" tests="5" failures="5" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_single.spec" time="0.174" timestamp="2019-03-12T16:34:16" name="Single private smart contract" errors="0" hostname="travis-job-36a3b9ae-614f-40e4-9ef1-3406c17236d8">
		<properties></properties>
		<testcase classname="Single private smart contract" name="Contract is mined" time="0.033">
			<failure message="Contract is mined&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Contract is mined&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Single private smart contract" name="Storage Root storing private smart contracts must be the same" time="0.032">
			<failure message="Storage Root storing private smart contracts must be the same&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Storage Root storing private smart contracts must be the same&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Single private smart contract" name="Transaction payload is secured" time="0.039">
			<failure message="Transaction payload is secured&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Transaction payload is secured&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Single private smart contract" name="Privacy is enforced between parties" time="0.032">
			<failure message="Privacy is enforced between parties&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Privacy is enforced between parties&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Single private smart contract" name="When there&#39;s an update, privacy is still enforced" time="0.038">
			<failure message="When there&#39;s an update, privacy is still enforced&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="When there&#39;s an update, privacy is still enforced&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="8" tests="2" failures="2" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/02_advanced/transactions_for_block_height.spec" time="0.073" timestamp="2019-03-12T16:34:16" name="Transactions for different block heights" errors="0" hostname="travis-job-36a3b9ae-614f-40e4-9ef1-3406c17236d8">
		<properties></properties>
		<testcase classname="Transactions for different block heights" name="Private smart contracts for Istanbul consensus" time="0.033">
			<failure message="Private smart contracts for Istanbul consensus&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Private smart contracts for Istanbul consensus&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Transactions for different block heights" name="Public smart contracts for Istanbul consensus" time="0.040">
			<failure message="Public smart contracts for Istanbul consensus&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Public smart contracts for Istanbul consensus&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="9" tests="2" failures="2" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_async.spec" time="0.070" timestamp="2019-03-12T16:34:16" name="Sending private smart contract asynchronously" errors="0" hostname="travis-job-36a3b9ae-614f-40e4-9ef1-3406c17236d8">
		<properties></properties>
		<testcase classname="Sending private smart contract asynchronously" name="Contract is successfully mined with valid account" time="0.038">
			<failure message="Contract is successfully mined with valid account&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Contract is successfully mined with valid account&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Sending private smart contract asynchronously" name="Contract is not mined with non-existed account" time="0.032">
			<failure message="Contract is not mined with non-existed account&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Contract is not mined with non-existed account&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="10" tests="2" failures="2" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_event.spec" time="0.067" timestamp="2019-03-12T16:34:16" name="Private smart contract with event" errors="0" hostname="travis-job-36a3b9ae-614f-40e4-9ef1-3406c17236d8">
		<properties></properties>
		<testcase classname="Private smart contract with event" name="Log events in total are **only** captured in participated parties when executing the contract" time="0.035">
			<failure message="Log events in total are **only** captured in participated parties when executing the contract&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Log events in total are **only** captured in participated parties when executing the contract&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Private smart contract with event" name="Log events in the state are **only** captured in participated parties when executing the contract" time="0.032">
			<failure message="Log events in the state are **only** captured in participated parties when executing the contract&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Log events in the state are **only** captured in participated parties when executing the contract&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="11" tests="1" failures="1" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_multiple.spec" time="0.036" timestamp="2019-03-12T16:34:16" name="Multiple private smart contracts" errors="0" hostname="travis-job-36a3b9ae-614f-40e4-9ef1-3406c17236d8">
		<properties></properties>
		<testcase classname="Multiple private smart contracts" name="Contracts are mined" time="0.036">
			<failure message="Contracts are mined&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Contracts are mined&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="12" tests="3" failures="3" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/externally_signed_public_raw_smart_contract_single.spec" time="0.105" timestamp="2019-03-12T16:34:16" name="Public raw smart contract when signed externally" errors="0" hostname="travis-job-36a3b9ae-614f-40e4-9ef1-3406c17236d8">
		<properties></properties>
		<testcase classname="Public raw smart contract when signed externally" name="Contract is deployed and mined" time="0.035">
			<failure message="Contract is deployed and mined&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Contract is deployed and mined&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Public raw smart contract when signed externally" name="Everyone in the network has the same state for the contract" time="0.032">
			<failure message="Everyone in the network has the same state for the contract&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Everyone in the network has the same state for the contract&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Public raw smart contract when signed externally" name="When there&#39;s an update, every node is updated" time="0.038">
			<failure message="When there&#39;s an update, every node is updated&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="When there&#39;s an update, every node is updated&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="13" tests="1" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_state_manipulation.spec" time="0.000" timestamp="2019-03-12T16:34:16" name="State manipulation in private smart contract" errors="0" skipped="1" hostname="travis-job-36a3b9ae-614f-40e4-9ef1-3406c17236d8">
		<properties></properties>
		<testcase classname="State manipulation in private smart contract" name="Private state is maintained" time="0.000">
			<skipped message="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_state_manipulation.spec:27 Step implementation not found =&gt; &#39;Note: this step is not implemented indicating that the spec execution is temporarily skipped&#39;"></skipped>
		</testcase>
		<system-out></system-out>
		<system-err>Validation failed, 1 Scenarios were skipped.</system-err>
	</testsuite>
	<testsuite id="14" tests="1" failures="1" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/public_smart_contract_event.spec" time="0.038" timestamp="2019-03-12T16:34:16" name="Public smart contract with event" errors="0" hostname="travis-job-36a3b9ae-614f-40e4-9ef1-3406c17236d8">
		<properties></properties>
		<testcase classname="Public smart contract with event" name="Log events in total are captured when executing the contract" time="0.038">
			<failure message="Log events in total are captured when executing the contract&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Log events in total are captured when executing the contract&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="15" tests="2" failures="2" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/value_transfer_private_transactions.spec" time="0.065" timestamp="2019-03-12T16:34:16" name="Value transfer in private transactions" errors="0" hostname="travis-job-36a3b9ae-614f-40e4-9ef1-3406c17236d8">
		<properties></properties>
		<testcase classname="Value transfer in private transactions" name="Unsuccessful private transaction submission" time="0.032">
			<failure message="Unsuccessful private transaction submission&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Unsuccessful private transaction submission&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<testcase classname="Value transfer in private transactions" name="Unsuccessful signed private transaction submission" time="0.033">
			<failure message="Unsuccessful signed private transaction submission&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;" type="Unsuccessful signed private transaction submission&#xA;Scenario Pre Hook Failure: &#39;java.lang.RuntimeException: java.net.SocketException: Malformed reply from SOCKS server&#39;">rx.exceptions.Exceptions.propagate(Exceptions.java:57)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.core.ExecutionHooks.saveCurrentBlockNumber(ExecutionHooks.java:53)&#xA;jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100)&#xA;com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88)&#xA;com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45)&#xA;com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65)&#xA;com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34)&#xA;com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:83)&#xA;com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:124)&#xA;com.thoughtworks.gauge.GaugeRuntime.lambda$connectSynchronously$1(GaugeRuntime.java:106)&#xA;java.base/java.lang.Thread.run(Thread.java:834)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
</testsuites>