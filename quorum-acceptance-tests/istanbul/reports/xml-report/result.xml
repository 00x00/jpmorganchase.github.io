<testsuites>
	<testsuite id="1" tests="2" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/02_advanced/transactions_for_block_height.spec" time="1035.149" timestamp="2018-11-01T16:45:00" name="Transactions for different block heights" errors="0" hostname="travis-job-a136745b-269f-4464-a289-3d8c89f72383">
		<properties></properties>
		<testcase classname="Transactions for different block heights" name="Private smart contracts for Istanbul consensus" time="502.395"></testcase>
		<testcase classname="Transactions for different block heights" name="Public smart contracts for Istanbul consensus" time="532.754"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="2" tests="1" failures="1" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/istanbul_fault_tolerance.spec" time="3.515" timestamp="2018-11-01T16:45:00" name="Istanbul fault tolerance and recoverability" errors="0" hostname="travis-job-a136745b-269f-4464-a289-3d8c89f72383">
		<properties></properties>
		<testcase classname="Istanbul fault tolerance and recoverability" name="Modify number of validators from less than 2F + 1 to more than 2F + 1" time="3.515">
			<failure message="Among &#34;7&#34; validators, stop &#34;3&#34; validators so there are less than 2F + 1 validators in the network&#xA;Step Execution Failure: &#39;java.lang.IllegalArgumentException: Can&#39;t find node Node10 in the configuration&#39;" type="Among &#34;7&#34; validators, stop &#34;3&#34; validators so there are less than 2F + 1 validators in the network&#xA;Step Execution Failure: &#39;java.lang.IllegalArgumentException: Can&#39;t find node Node10 in the configuration&#39;">com.quorum.gauge.services.QuorumNodeConnectionFactory.getWeb3jService(QuorumNodeConnectionFactory.java:51)&#xA;com.quorum.gauge.services.IstanbulService.stopMining(IstanbulService.java:45)&#xA;com.quorum.gauge.Istanbul.lambda$stopValidators$0(Istanbul.java:58)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.onNext(OnSubscribeMap.java:69)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.fastPath(OnSubscribeFromIterable.java:173)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.request(OnSubscribeFromIterable.java:86)&#xA;rx.Subscriber.setProducer(Subscriber.java:211)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.setProducer(OnSubscribeMap.java:102)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:63)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:34)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.DeferredScalarSubscriber.subscribeTo(DeferredScalarSubscriber.java:153)&#xA;rx.internal.operators.OnSubscribeTakeLastOne.call(OnSubscribeTakeLastOne.java:32)&#xA;rx.internal.operators.OnSubscribeTakeLastOne.call(OnSubscribeTakeLastOne.java:22)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.subscribe(Observable.java:10423)&#xA;rx.Observable.subscribe(Observable.java:10390)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)&#xA;rx.observables.BlockingObservable.last(BlockingObservable.java:226)&#xA;com.quorum.gauge.Istanbul.stopValidators(Istanbul.java:60)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="3" tests="1" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_multiple.spec" time="19.295" timestamp="2018-11-01T16:45:00" name="Multiple private smart contracts" errors="0" hostname="travis-job-a136745b-269f-4464-a289-3d8c89f72383">
		<properties></properties>
		<testcase classname="Multiple private smart contracts" name="Contracts are mined" time="19.295"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="4" tests="5" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_single.spec" time="14.412" timestamp="2018-11-01T16:45:00" name="Single private smart contract" errors="0" hostname="travis-job-a136745b-269f-4464-a289-3d8c89f72383">
		<properties></properties>
		<testcase classname="Single private smart contract" name="Contract is mined" time="2.388"></testcase>
		<testcase classname="Single private smart contract" name="Storage Root storing private smart contracts must be the same" time="2.230"></testcase>
		<testcase classname="Single private smart contract" name="Transaction payload is secured" time="2.572"></testcase>
		<testcase classname="Single private smart contract" name="Privacy is enforced between parties" time="2.492"></testcase>
		<testcase classname="Single private smart contract" name="When there&#39;s an update, privacy is still enforced" time="4.730"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="5" tests="1" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_state_manipulation.spec" time="0.000" timestamp="2018-11-01T16:45:00" name="State manipulation in private smart contract" errors="0" hostname="travis-job-a136745b-269f-4464-a289-3d8c89f72383">
		<properties></properties>
		<testcase classname="State manipulation in private smart contract" name="Private state is maintained" time="0.000">
			<skipped message="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_state_manipulation.spec:27 Step implementation not found =&gt; &#39;Note: this step is not implemented indicating that the spec execution is temporarily skipped&#39;"></skipped>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="6" tests="2" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/value_transfer_public_transactions.spec" time="5.200" timestamp="2018-11-01T16:45:00" name="Value transfer in public transactions" errors="0" hostname="travis-job-a136745b-269f-4464-a289-3d8c89f72383">
		<properties></properties>
		<testcase classname="Value transfer in public transactions" name="Successful public transaction submission" time="2.664"></testcase>
		<testcase classname="Value transfer in public transactions" name="Successful signed public transaction submission" time="2.536"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="7" tests="2" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_async.spec" time="5.884" timestamp="2018-11-01T16:45:00" name="Sending private smart contract asynchronously" errors="0" hostname="travis-job-a136745b-269f-4464-a289-3d8c89f72383">
		<properties></properties>
		<testcase classname="Sending private smart contract asynchronously" name="Contract is successfully mined with valid account" time="4.707"></testcase>
		<testcase classname="Sending private smart contract asynchronously" name="Contract is not mined with non-existed account" time="1.177"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="8" tests="1" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_event.spec" time="5.798" timestamp="2018-11-01T16:45:00" name="Private smart contract with event" errors="0" hostname="travis-job-a136745b-269f-4464-a289-3d8c89f72383">
		<properties></properties>
		<testcase classname="Private smart contract with event" name="Log events in total are **only** captured in participated parties when executing the contract" time="5.798"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="9" tests="1" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/public_smart_contract_event.spec" time="31.470" timestamp="2018-11-01T16:45:00" name="Public smart contract with event" errors="0" hostname="travis-job-a136745b-269f-4464-a289-3d8c89f72383">
		<properties></properties>
		<testcase classname="Public smart contract with event" name="Log events in total are captured when executing the contract" time="31.470"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="10" tests="2" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/value_transfer_private_transactions.spec" time="0.526" timestamp="2018-11-01T16:45:00" name="Value transfer in private transactions" errors="0" hostname="travis-job-a136745b-269f-4464-a289-3d8c89f72383">
		<properties></properties>
		<testcase classname="Value transfer in private transactions" name="Unsuccessful private transaction submission" time="0.254"></testcase>
		<testcase classname="Value transfer in private transactions" name="Unsuccessful signed private transaction submission" time="0.272"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
</testsuites>