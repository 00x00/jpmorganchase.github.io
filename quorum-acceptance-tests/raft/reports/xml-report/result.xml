<testsuites>
	<testsuite id="1" tests="4" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/personal_api_signed_private_raw_smart_contract_single.spec" time="10.863" timestamp="2020-03-27T20:28:27" name="Private raw smart contract when signed using the personal_signTransaction API" errors="0" hostname="travis-job-48ba1a7d-ee31-4b64-a87d-6a6250e9c4f5">
		<properties></properties>
		<testcase classname="Private raw smart contract when signed using the personal_signTransaction API" name="Storage Root storing private smart contracts must be the same" time="1.567"></testcase>
		<testcase classname="Private raw smart contract when signed using the personal_signTransaction API" name="Transaction payload is secured" time="1.623"></testcase>
		<testcase classname="Private raw smart contract when signed using the personal_signTransaction API" name="Privacy is enforced between parties" time="1.730"></testcase>
		<testcase classname="Private raw smart contract when signed using the personal_signTransaction API" name="When there&#39;s an update, privacy is still enforced" time="5.943"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="2" tests="2" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_event.spec" time="17.030" timestamp="2020-03-27T20:28:27" name="Private smart contract with event" errors="0" hostname="travis-job-48ba1a7d-ee31-4b64-a87d-6a6250e9c4f5">
		<properties></properties>
		<testcase classname="Private smart contract with event" name="Log events in total are **only** captured in participated parties when executing the contract" time="8.646"></testcase>
		<testcase classname="Private smart contract with event" name="Log events in the state are **only** captured in participated parties when executing the contract" time="8.384"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="3" tests="1" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/02_advanced/private_transaction_bloom_section.spec" time="0.000" timestamp="2020-03-27T20:28:27" name="Private smart contract with event in the next bloom bit section" errors="0" skipped="1" hostname="travis-job-48ba1a7d-ee31-4b64-a87d-6a6250e9c4f5">
		<properties></properties>
		<testcase classname="Private smart contract with event in the next bloom bit section" name="Log events are **only** captured in participated parties when executing the contract" time="0.000">
			<skipped message="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/02_advanced/private_transaction_bloom_section.spec:28 Step implementation not found =&gt; &#39;Note: this spec requires a revisit due to high block number setup&#39;"></skipped>
		</testcase>
		<system-out></system-out>
		<system-err>Validation failed, 1 Scenarios were skipped.</system-err>
	</testsuite>
	<testsuite id="4" tests="3" failures="3" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/raft_gas_usage.spec" time="1.054" timestamp="2020-03-27T20:28:27" name="Gas usage for private contracts on participant and non-participant nodes" errors="0" hostname="travis-job-48ba1a7d-ee31-4b64-a87d-6a6250e9c4f5">
		<properties></properties>
		<testcase classname="Gas usage for private contracts on participant and non-participant nodes" name="Private contract with gas below intrinsic gas should be rejected (and not remain pending)." time="0.820">
			<failure message="Private transaction where minter is not a participant and gas value is &#34;25100&#34;, name this contract as &#34;contract2&#34;&#xA;Step Execution Failure: &#39;java.lang.NullPointerException&#39;" type="Private transaction where minter is not a participant and gas value is &#34;25100&#34;, name this contract as &#34;contract2&#34;&#xA;Step Execution Failure: &#39;java.lang.NullPointerException&#39;">java.base/java.lang.String.contains(String.java:2036)&#xA;com.quorum.gauge.services.RaftService.getLeader(RaftService.java:90)&#xA;com.quorum.gauge.RaftGasUsage.sendPrivateTransactionWithNonParticipantMinter(RaftGasUsage.java:72)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.StepExecutionStage.executeStepMethod(StepExecutionStage.java:76)&#xA;com.thoughtworks.gauge.execution.StepExecutionStage.executeStep(StepExecutionStage.java:69)&#xA;com.thoughtworks.gauge.execution.StepExecutionStage.execute(StepExecutionStage.java:51)&#xA;com.thoughtworks.gauge.execution.AbstractExecutionStage.executeNext(AbstractExecutionStage.java:24)&#xA;com.thoughtworks.gauge.execution.HookExecutionStage.execute(HookExecutionStage.java:43)&#xA;com.thoughtworks.gauge.execution.ExecutionPipeline.start(ExecutionPipeline.java:29)&#xA;com.thoughtworks.gauge.processor.ExecuteStepProcessor.process(ExecuteStepProcessor.java:48)&#xA;com.thoughtworks.gauge.RunnerServiceHandler.lambda$executeStep$7(RunnerServiceHandler.java:176)&#xA;com.thoughtworks.gauge.execution.TaskExecutor.run(TaskExecutor.java:22)&#xA;</failure>
		</testcase>
		<testcase classname="Gas usage for private contracts on participant and non-participant nodes" name="Private contract with gas between intrinsic gas and required gas should be rejected (and not remain pending)." time="0.131">
			<failure message="Private transaction where minter is a participant and gas value is &#34;60352&#34;, name this contract as &#34;contract3&#34;&#xA;Step Execution Failure: &#39;java.lang.NullPointerException&#39;" type="Private transaction where minter is a participant and gas value is &#34;60352&#34;, name this contract as &#34;contract3&#34;&#xA;Step Execution Failure: &#39;java.lang.NullPointerException&#39;">java.base/java.lang.String.contains(String.java:2036)&#xA;com.quorum.gauge.services.RaftService.getLeader(RaftService.java:90)&#xA;com.quorum.gauge.RaftGasUsage.sendPrivateTransactionWithParticipantMinter(RaftGasUsage.java:61)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.StepExecutionStage.executeStepMethod(StepExecutionStage.java:76)&#xA;com.thoughtworks.gauge.execution.StepExecutionStage.executeStep(StepExecutionStage.java:69)&#xA;com.thoughtworks.gauge.execution.StepExecutionStage.execute(StepExecutionStage.java:51)&#xA;com.thoughtworks.gauge.execution.AbstractExecutionStage.executeNext(AbstractExecutionStage.java:24)&#xA;com.thoughtworks.gauge.execution.HookExecutionStage.execute(HookExecutionStage.java:43)&#xA;com.thoughtworks.gauge.execution.ExecutionPipeline.start(ExecutionPipeline.java:29)&#xA;com.thoughtworks.gauge.processor.ExecuteStepProcessor.process(ExecuteStepProcessor.java:48)&#xA;com.thoughtworks.gauge.RunnerServiceHandler.lambda$executeStep$7(RunnerServiceHandler.java:176)&#xA;com.thoughtworks.gauge.execution.TaskExecutor.run(TaskExecutor.java:22)&#xA;</failure>
		</testcase>
		<testcase classname="Gas usage for private contracts on participant and non-participant nodes" name="Private contract with sufficient gas should be accepted." time="0.103">
			<failure message="Private transaction where minter is a participant and gas value is &#34;120000&#34;, name this contract as &#34;contract5&#34;&#xA;Step Execution Failure: &#39;java.lang.NullPointerException&#39;" type="Private transaction where minter is a participant and gas value is &#34;120000&#34;, name this contract as &#34;contract5&#34;&#xA;Step Execution Failure: &#39;java.lang.NullPointerException&#39;">java.base/java.lang.String.contains(String.java:2036)&#xA;com.quorum.gauge.services.RaftService.getLeader(RaftService.java:90)&#xA;com.quorum.gauge.RaftGasUsage.sendPrivateTransactionWithParticipantMinter(RaftGasUsage.java:61)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.StepExecutionStage.executeStepMethod(StepExecutionStage.java:76)&#xA;com.thoughtworks.gauge.execution.StepExecutionStage.executeStep(StepExecutionStage.java:69)&#xA;com.thoughtworks.gauge.execution.StepExecutionStage.execute(StepExecutionStage.java:51)&#xA;com.thoughtworks.gauge.execution.AbstractExecutionStage.executeNext(AbstractExecutionStage.java:24)&#xA;com.thoughtworks.gauge.execution.HookExecutionStage.execute(HookExecutionStage.java:43)&#xA;com.thoughtworks.gauge.execution.ExecutionPipeline.start(ExecutionPipeline.java:29)&#xA;com.thoughtworks.gauge.processor.ExecuteStepProcessor.process(ExecuteStepProcessor.java:48)&#xA;com.thoughtworks.gauge.RunnerServiceHandler.lambda$executeStep$7(RunnerServiceHandler.java:176)&#xA;com.thoughtworks.gauge.execution.TaskExecutor.run(TaskExecutor.java:22)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="5" tests="1" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/02_advanced/transactions_for_block_height.spec" time="9.750" timestamp="2020-03-27T20:28:27" name="Transactions for different block heights" errors="0" hostname="travis-job-48ba1a7d-ee31-4b64-a87d-6a6250e9c4f5">
		<properties></properties>
		<testcase classname="Transactions for different block heights" name="Private smart contracts for Raft consensus" time="9.750"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="6" tests="2" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/estimate_gas_private.spec" time="0.950" timestamp="2020-03-27T20:28:27" name="Estimate gas required for transactions and contracts" errors="0" hostname="travis-job-48ba1a7d-ee31-4b64-a87d-6a6250e9c4f5">
		<properties></properties>
		<testcase classname="Estimate gas required for transactions and contracts" name="Estimate gas required to create private smart contract" time="0.499"></testcase>
		<testcase classname="Estimate gas required for transactions and contracts" name="Estimate gas required to call a private smart contract" time="0.451"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="7" tests="3" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/externally_signed_public_raw_smart_contract_single.spec" time="3.371" timestamp="2020-03-27T20:28:27" name="Public raw smart contract when signed externally" errors="0" hostname="travis-job-48ba1a7d-ee31-4b64-a87d-6a6250e9c4f5">
		<properties></properties>
		<testcase classname="Public raw smart contract when signed externally" name="Contract is deployed and mined" time="1.393"></testcase>
		<testcase classname="Public raw smart contract when signed externally" name="Everyone in the network has the same state for the contract" time="0.292"></testcase>
		<testcase classname="Public raw smart contract when signed externally" name="When there&#39;s an update, every node is updated" time="1.686"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="8" tests="1" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_multiple.spec" time="17.713" timestamp="2020-03-27T20:28:27" name="Multiple private smart contracts" errors="0" hostname="travis-job-48ba1a7d-ee31-4b64-a87d-6a6250e9c4f5">
		<properties></properties>
		<testcase classname="Multiple private smart contracts" name="Contracts are mined" time="17.713"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="9" tests="1" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_spam.spec" time="9.952" timestamp="2020-03-27T20:28:27" name="Multiple private smart contracts between nodes" errors="0" hostname="travis-job-48ba1a7d-ee31-4b64-a87d-6a6250e9c4f5">
		<properties></properties>
		<testcase classname="Multiple private smart contracts between nodes" name="Send transactions from one node to others" time="9.952"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="10" tests="3" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/estimate_gas.spec" time="1.217" timestamp="2020-03-27T20:28:27" name="Estimate gas required for transactions and contracts" errors="0" hostname="travis-job-48ba1a7d-ee31-4b64-a87d-6a6250e9c4f5">
		<properties></properties>
		<testcase classname="Estimate gas required for transactions and contracts" name="Estimate gas required for public transaction" time="0.673"></testcase>
		<testcase classname="Estimate gas required for transactions and contracts" name="Estimate gas required to create public smart contract" time="0.269"></testcase>
		<testcase classname="Estimate gas required for transactions and contracts" name="Estimate gas required to call a public smart contract" time="0.275"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="11" tests="2" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_async.spec" time="8.581" timestamp="2020-03-27T20:28:27" name="Sending private smart contract asynchronously" errors="0" hostname="travis-job-48ba1a7d-ee31-4b64-a87d-6a6250e9c4f5">
		<properties></properties>
		<testcase classname="Sending private smart contract asynchronously" name="Contract is successfully mined with valid account" time="7.510"></testcase>
		<testcase classname="Sending private smart contract asynchronously" name="Contract is not mined with non-existed account" time="1.071"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="12" tests="4" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/smart_contract_dual_state.spec" time="10.906" timestamp="2020-03-27T20:28:27" name="Dual state implementation when peforming function calls from one smart contract to another" errors="0" hostname="travis-job-48ba1a7d-ee31-4b64-a87d-6a6250e9c4f5">
		<properties></properties>
		<testcase classname="Dual state implementation when peforming function calls from one smart contract to another" name="Function calls between all public smart contracts: public -&gt; public -&gt; public" time="1.151"></testcase>
		<testcase classname="Dual state implementation when peforming function calls from one smart contract to another" name="Function calls between all private smart contracts: private -&gt; private -&gt; private" time="3.301"></testcase>
		<testcase classname="Dual state implementation when peforming function calls from one smart contract to another" name="Function calls from a private smart contract to public smart contracts: private -&gt; public -&gt; public" time="5.278"></testcase>
		<testcase classname="Dual state implementation when peforming function calls from one smart contract to another" name="Function calls from a public smart contract to private smart contracts: public -&gt; private -&gt; private" time="1.176"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="13" tests="1" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/public_smart_contract_event.spec" time="5.270" timestamp="2020-03-27T20:28:27" name="Public smart contract with event" errors="0" hostname="travis-job-48ba1a7d-ee31-4b64-a87d-6a6250e9c4f5">
		<properties></properties>
		<testcase classname="Public smart contract with event" name="Log events in total are captured when executing the contract" time="5.270"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="14" tests="2" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/value_transfer_private_transactions.spec" time="0.330" timestamp="2020-03-27T20:28:27" name="Value transfer in private transactions" errors="0" hostname="travis-job-48ba1a7d-ee31-4b64-a87d-6a6250e9c4f5">
		<properties></properties>
		<testcase classname="Value transfer in private transactions" name="Unsuccessful private transaction submission" time="0.133"></testcase>
		<testcase classname="Value transfer in private transactions" name="Unsuccessful signed private transaction submission" time="0.197"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="15" tests="2" failures="1" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/value_transfer_public_transactions.spec" time="1.025" timestamp="2020-03-27T20:28:27" name="Value transfer in public transactions" errors="0" hostname="travis-job-48ba1a7d-ee31-4b64-a87d-6a6250e9c4f5">
		<properties></properties>
		<testcase classname="Value transfer in public transactions" name="Successful public transaction submission" time="0.500"></testcase>
		<testcase classname="Value transfer in public transactions" name="Successful signed public transaction submission" time="0.525">
			<failure message="In &#34;Node4&#34;, the default account&#39;s balance is now greater than its previous balance&#xA;Step Execution Failure: &#39;java.lang.AssertionError: &#xA;Expecting:&#xA; &lt;1000000000000000000000000000&gt;&#xA;to be greater than:&#xA; &lt;1000000000000000000000000000&gt; &#39;" type="In &#34;Node4&#34;, the default account&#39;s balance is now greater than its previous balance&#xA;Step Execution Failure: &#39;java.lang.AssertionError: &#xA;Expecting:&#xA; &lt;1000000000000000000000000000&gt;&#xA;to be greater than:&#xA; &lt;1000000000000000000000000000&gt; &#39;">com.quorum.gauge.ValueTransferPublicTransaction.verifyMoreBalance(ValueTransferPublicTransaction.java:90)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;java.base/java.lang.reflect.Method.invoke(Method.java:566)&#xA;com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)&#xA;com.thoughtworks.gauge.execution.StepExecutionStage.executeStepMethod(StepExecutionStage.java:76)&#xA;com.thoughtworks.gauge.execution.StepExecutionStage.executeStep(StepExecutionStage.java:69)&#xA;com.thoughtworks.gauge.execution.StepExecutionStage.execute(StepExecutionStage.java:51)&#xA;com.thoughtworks.gauge.execution.AbstractExecutionStage.executeNext(AbstractExecutionStage.java:24)&#xA;com.thoughtworks.gauge.execution.HookExecutionStage.execute(HookExecutionStage.java:43)&#xA;com.thoughtworks.gauge.execution.ExecutionPipeline.start(ExecutionPipeline.java:29)&#xA;com.thoughtworks.gauge.processor.ExecuteStepProcessor.process(ExecuteStepProcessor.java:48)&#xA;com.thoughtworks.gauge.RunnerServiceHandler.lambda$executeStep$7(RunnerServiceHandler.java:176)&#xA;com.thoughtworks.gauge.execution.TaskExecutor.run(TaskExecutor.java:22)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="16" tests="4" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/eth_api_signed_private_raw_smart_contract_single.spec" time="6.258" timestamp="2020-03-27T20:28:27" name="Private raw smart contract when signed using the eth_signTransaction API" errors="0" hostname="travis-job-48ba1a7d-ee31-4b64-a87d-6a6250e9c4f5">
		<properties></properties>
		<testcase classname="Private raw smart contract when signed using the eth_signTransaction API" name="Storage Root storing private smart contracts must be the same" time="3.764"></testcase>
		<testcase classname="Private raw smart contract when signed using the eth_signTransaction API" name="Transaction payload is secured" time="0.741"></testcase>
		<testcase classname="Private raw smart contract when signed using the eth_signTransaction API" name="Privacy is enforced between parties" time="0.715"></testcase>
		<testcase classname="Private raw smart contract when signed using the eth_signTransaction API" name="When there&#39;s an update, privacy is still enforced" time="1.038"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="17" tests="5" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/externally_signed_private_raw_smart_contract_single.spec" time="13.307" timestamp="2020-03-27T20:28:27" name="Private raw smart contract when signed externally" errors="0" hostname="travis-job-48ba1a7d-ee31-4b64-a87d-6a6250e9c4f5">
		<properties></properties>
		<testcase classname="Private raw smart contract when signed externally" name="Contract is mined" time="5.012"></testcase>
		<testcase classname="Private raw smart contract when signed externally" name="Storage Root storing private smart contracts must be the same" time="1.622"></testcase>
		<testcase classname="Private raw smart contract when signed externally" name="Transaction payload is secured" time="1.802"></testcase>
		<testcase classname="Private raw smart contract when signed externally" name="Privacy is enforced between parties" time="1.764"></testcase>
		<testcase classname="Private raw smart contract when signed externally" name="When there&#39;s an update, privacy is still enforced" time="3.107"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="18" tests="5" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_single.spec" time="10.956" timestamp="2020-03-27T20:28:27" name="Single private smart contract" errors="0" hostname="travis-job-48ba1a7d-ee31-4b64-a87d-6a6250e9c4f5">
		<properties></properties>
		<testcase classname="Single private smart contract" name="Contract is mined" time="5.420"></testcase>
		<testcase classname="Single private smart contract" name="Storage Root storing private smart contracts must be the same" time="2.213"></testcase>
		<testcase classname="Single private smart contract" name="Transaction payload is secured" time="0.428"></testcase>
		<testcase classname="Single private smart contract" name="Privacy is enforced between parties" time="0.372"></testcase>
		<testcase classname="Single private smart contract" name="When there&#39;s an update, privacy is still enforced" time="2.523"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="19" tests="1" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_state_manipulation.spec" time="0.000" timestamp="2020-03-27T20:28:27" name="State manipulation in private smart contract" errors="0" skipped="1" hostname="travis-job-48ba1a7d-ee31-4b64-a87d-6a6250e9c4f5">
		<properties></properties>
		<testcase classname="State manipulation in private smart contract" name="Private state is maintained" time="0.000">
			<skipped message="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_state_manipulation.spec:27 Step implementation not found =&gt; &#39;Note: this step is not implemented indicating that the spec execution is temporarily skipped&#39;"></skipped>
		</testcase>
		<system-out></system-out>
		<system-err>Validation failed, 1 Scenarios were skipped.</system-err>
	</testsuite>
</testsuites>