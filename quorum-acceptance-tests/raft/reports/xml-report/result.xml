<testsuites>
	<testsuite id="1" tests="1" failures="1" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_event.spec" time="0.128" timestamp="2018-11-22T15:34:33" name="Private smart contract with event" errors="0" hostname="travis-job-16ea77a1-d8ed-4609-9228-7f1c47a9936c">
		<properties></properties>
		<testcase classname="Private smart contract with event" name="Log events in total are **only** captured in participated parties when executing the contract" time="0.128">
			<failure message="Deploy `ClientReceipt` smart contract from a default account in &#34;Node1&#34; and it&#39;s private for &#34;Node7&#34;, named this contract as &#34;contract17&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Type:[text/plain] Content-Length:[18] Connection:[keep-alive]] Body:0xc4353dfa80 ContentLength:18 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc43543fb00 TLS:&lt;nil&gt;}&#39;" type="Deploy `ClientReceipt` smart contract from a default account in &#34;Node1&#34; and it&#39;s private for &#34;Node7&#34;, named this contract as &#34;contract17&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Type:[text/plain] Content-Length:[18] Connection:[keep-alive]] Body:0xc4353dfa80 ContentLength:18 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc43543fb00 TLS:&lt;nil&gt;}&#39;">org.web3j.tx.Contract.deploy(Contract.java:375)&#xA;org.web3j.tx.Contract.lambda$deployRemoteCall$6(Contract.java:404)&#xA;org.web3j.protocol.core.RemoteCall.send(RemoteCall.java:30)&#xA;org.web3j.protocol.core.RemoteCall.lambda$observable$0(RemoteCall.java:51)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:248)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:148)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.onNext(OnSubscribeMap.java:77)&#xA;rx.internal.producers.SingleProducer.request(SingleProducer.java:65)&#xA;rx.Subscriber.setProducer(Subscriber.java:211)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.setProducer(OnSubscribeMap.java:102)&#xA;rx.internal.operators.OperatorSingle$ParentSubscriber.onCompleted(OperatorSingle.java:110)&#xA;rx.internal.operators.OperatorTake$1.onNext(OperatorTake.java:83)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.emitScalar(OperatorMerge.java:395)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.tryEmit(OperatorMerge.java:355)&#xA;rx.internal.operators.OperatorMerge$InnerSubscriber.onNext(OperatorMerge.java:846)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.slowPath(OnSubscribeFromIterable.java:117)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.request(OnSubscribeFromIterable.java:89)&#xA;rx.Subscriber.setProducer(Subscriber.java:211)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:63)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:34)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:248)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:148)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.onNext(OnSubscribeMap.java:77)&#xA;org.web3j.protocol.core.RemoteCall.lambda$observable$0(RemoteCall.java:51)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.subscribe(Observable.java:10423)&#xA;rx.Observable.subscribe(Observable.java:10390)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.PrivateSmartContract.deployClientReceiptSmartContract(PrivateSmartContract.java:283)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="2" tests="1" failures="1" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_multiple.spec" time="0.214" timestamp="2018-11-22T15:34:33" name="Multiple private smart contracts" errors="0" hostname="travis-job-16ea77a1-d8ed-4609-9228-7f1c47a9936c">
		<properties></properties>
		<testcase classname="Multiple private smart contracts" name="Contracts are mined" time="0.214">
			<failure message="Deploy &#34;10&#34; private smart contracts between a default account in &#34;Node1&#34; and a default account in &#34;Node2&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Length:[18] Connection:[keep-alive] Content-Type:[text/plain]] Body:0xc434e2aa00 ContentLength:18 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc43543fd00 TLS:&lt;nil&gt;}&#39;" type="Deploy &#34;10&#34; private smart contracts between a default account in &#34;Node1&#34; and a default account in &#34;Node2&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Length:[18] Connection:[keep-alive] Content-Type:[text/plain]] Body:0xc434e2aa00 ContentLength:18 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc43543fd00 TLS:&lt;nil&gt;}&#39;">org.web3j.tx.Contract.deploy(Contract.java:375)&#xA;org.web3j.tx.Contract.lambda$deployRemoteCall$6(Contract.java:404)&#xA;org.web3j.protocol.core.RemoteCall.send(RemoteCall.java:30)&#xA;org.web3j.protocol.core.RemoteCall.lambda$observable$0(RemoteCall.java:51)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:248)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:148)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.onNext(OnSubscribeMap.java:77)&#xA;rx.internal.producers.SingleProducer.request(SingleProducer.java:65)&#xA;rx.Subscriber.setProducer(Subscriber.java:211)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.setProducer(OnSubscribeMap.java:102)&#xA;rx.internal.operators.OperatorSingle$ParentSubscriber.onCompleted(OperatorSingle.java:110)&#xA;rx.internal.operators.OperatorTake$1.onNext(OperatorTake.java:83)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.emitScalar(OperatorMerge.java:395)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.tryEmit(OperatorMerge.java:355)&#xA;rx.internal.operators.OperatorMerge$InnerSubscriber.onNext(OperatorMerge.java:846)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.slowPath(OnSubscribeFromIterable.java:117)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.request(OnSubscribeFromIterable.java:89)&#xA;rx.Subscriber.setProducer(Subscriber.java:211)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:63)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:34)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:248)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:148)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.onNext(OnSubscribeMap.java:77)&#xA;org.web3j.protocol.core.RemoteCall.lambda$observable$0(RemoteCall.java:51)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber.call(OperatorSubscribeOn.java:100)&#xA;rx.internal.schedulers.CachedThreadScheduler$EventLoopWorker$1.call(CachedThreadScheduler.java:230)&#xA;rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)&#xA;java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)&#xA;java.util.concurrent.FutureTask.run(FutureTask.java:266)&#xA;java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)&#xA;java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)&#xA;java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)&#xA;java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)&#xA;java.lang.Thread.run(Thread.java:748)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="3" tests="5" failures="5" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_single.spec" time="0.779" timestamp="2018-11-22T15:34:33" name="Single private smart contract" errors="0" hostname="travis-job-16ea77a1-d8ed-4609-9228-7f1c47a9936c">
		<properties></properties>
		<testcase classname="Single private smart contract" name="Contract is mined" time="0.179">
			<failure message="Deploy a simple smart contract with initial value &#34;42&#34; in &#34;Node1&#34;&#39;s default account and it&#39;s private for &#34;Node7&#34;, named this contract as &#34;contract17&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Type:[text/plain] Content-Length:[18] Connection:[keep-alive]] Body:0xc435556d40 ContentLength:18 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc43555a800 TLS:&lt;nil&gt;}&#39;" type="Deploy a simple smart contract with initial value &#34;42&#34; in &#34;Node1&#34;&#39;s default account and it&#39;s private for &#34;Node7&#34;, named this contract as &#34;contract17&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Type:[text/plain] Content-Length:[18] Connection:[keep-alive]] Body:0xc435556d40 ContentLength:18 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc43555a800 TLS:&lt;nil&gt;}&#39;">org.web3j.tx.Contract.deploy(Contract.java:375)&#xA;org.web3j.tx.Contract.lambda$deployRemoteCall$6(Contract.java:404)&#xA;org.web3j.protocol.core.RemoteCall.send(RemoteCall.java:30)&#xA;org.web3j.protocol.core.RemoteCall.lambda$observable$0(RemoteCall.java:51)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:248)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:148)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.onNext(OnSubscribeMap.java:77)&#xA;rx.internal.producers.SingleProducer.request(SingleProducer.java:65)&#xA;rx.Subscriber.setProducer(Subscriber.java:211)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.setProducer(OnSubscribeMap.java:102)&#xA;rx.internal.operators.OperatorSingle$ParentSubscriber.onCompleted(OperatorSingle.java:110)&#xA;rx.internal.operators.OperatorTake$1.onNext(OperatorTake.java:83)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.emitScalar(OperatorMerge.java:395)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.tryEmit(OperatorMerge.java:355)&#xA;rx.internal.operators.OperatorMerge$InnerSubscriber.onNext(OperatorMerge.java:846)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.slowPath(OnSubscribeFromIterable.java:117)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.request(OnSubscribeFromIterable.java:89)&#xA;rx.Subscriber.setProducer(Subscriber.java:211)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:63)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:34)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:248)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:148)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.onNext(OnSubscribeMap.java:77)&#xA;org.web3j.protocol.core.RemoteCall.lambda$observable$0(RemoteCall.java:51)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.subscribe(Observable.java:10423)&#xA;rx.Observable.subscribe(Observable.java:10390)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.PrivateSmartContract.setupContract(PrivateSmartContract.java:63)&#xA;</failure>
		</testcase>
		<testcase classname="Single private smart contract" name="Storage Root storing private smart contracts must be the same" time="0.148">
			<failure message="Deploy a simple smart contract with initial value &#34;42&#34; in &#34;Node1&#34;&#39;s default account and it&#39;s private for &#34;Node7&#34;, named this contract as &#34;contract17&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Length:[18] Connection:[keep-alive] Content-Type:[text/plain]] Body:0xc435556f00 ContentLength:18 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc43555aa00 TLS:&lt;nil&gt;}&#39;" type="Deploy a simple smart contract with initial value &#34;42&#34; in &#34;Node1&#34;&#39;s default account and it&#39;s private for &#34;Node7&#34;, named this contract as &#34;contract17&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Length:[18] Connection:[keep-alive] Content-Type:[text/plain]] Body:0xc435556f00 ContentLength:18 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc43555aa00 TLS:&lt;nil&gt;}&#39;">org.web3j.tx.Contract.deploy(Contract.java:375)&#xA;org.web3j.tx.Contract.lambda$deployRemoteCall$6(Contract.java:404)&#xA;org.web3j.protocol.core.RemoteCall.send(RemoteCall.java:30)&#xA;org.web3j.protocol.core.RemoteCall.lambda$observable$0(RemoteCall.java:51)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:248)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:148)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.onNext(OnSubscribeMap.java:77)&#xA;rx.internal.producers.SingleProducer.request(SingleProducer.java:65)&#xA;rx.Subscriber.setProducer(Subscriber.java:211)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.setProducer(OnSubscribeMap.java:102)&#xA;rx.internal.operators.OperatorSingle$ParentSubscriber.onCompleted(OperatorSingle.java:110)&#xA;rx.internal.operators.OperatorTake$1.onNext(OperatorTake.java:83)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.emitScalar(OperatorMerge.java:395)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.tryEmit(OperatorMerge.java:355)&#xA;rx.internal.operators.OperatorMerge$InnerSubscriber.onNext(OperatorMerge.java:846)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.slowPath(OnSubscribeFromIterable.java:117)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.request(OnSubscribeFromIterable.java:89)&#xA;rx.Subscriber.setProducer(Subscriber.java:211)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:63)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:34)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:248)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:148)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.onNext(OnSubscribeMap.java:77)&#xA;org.web3j.protocol.core.RemoteCall.lambda$observable$0(RemoteCall.java:51)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.subscribe(Observable.java:10423)&#xA;rx.Observable.subscribe(Observable.java:10390)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.PrivateSmartContract.setupContract(PrivateSmartContract.java:63)&#xA;</failure>
		</testcase>
		<testcase classname="Single private smart contract" name="Transaction payload is secured" time="0.155">
			<failure message="Deploy a simple smart contract with initial value &#34;42&#34; in &#34;Node1&#34;&#39;s default account and it&#39;s private for &#34;Node7&#34;, named this contract as &#34;contract17&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Type:[text/plain] Content-Length:[18] Connection:[keep-alive]] Body:0xc4355bc680 ContentLength:18 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc4354bff00 TLS:&lt;nil&gt;}&#39;" type="Deploy a simple smart contract with initial value &#34;42&#34; in &#34;Node1&#34;&#39;s default account and it&#39;s private for &#34;Node7&#34;, named this contract as &#34;contract17&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Type:[text/plain] Content-Length:[18] Connection:[keep-alive]] Body:0xc4355bc680 ContentLength:18 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc4354bff00 TLS:&lt;nil&gt;}&#39;">org.web3j.tx.Contract.deploy(Contract.java:375)&#xA;org.web3j.tx.Contract.lambda$deployRemoteCall$6(Contract.java:404)&#xA;org.web3j.protocol.core.RemoteCall.send(RemoteCall.java:30)&#xA;org.web3j.protocol.core.RemoteCall.lambda$observable$0(RemoteCall.java:51)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:248)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:148)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.onNext(OnSubscribeMap.java:77)&#xA;rx.internal.producers.SingleProducer.request(SingleProducer.java:65)&#xA;rx.Subscriber.setProducer(Subscriber.java:211)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.setProducer(OnSubscribeMap.java:102)&#xA;rx.internal.operators.OperatorSingle$ParentSubscriber.onCompleted(OperatorSingle.java:110)&#xA;rx.internal.operators.OperatorTake$1.onNext(OperatorTake.java:83)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.emitScalar(OperatorMerge.java:395)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.tryEmit(OperatorMerge.java:355)&#xA;rx.internal.operators.OperatorMerge$InnerSubscriber.onNext(OperatorMerge.java:846)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.slowPath(OnSubscribeFromIterable.java:117)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.request(OnSubscribeFromIterable.java:89)&#xA;rx.Subscriber.setProducer(Subscriber.java:211)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:63)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:34)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:248)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:148)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.onNext(OnSubscribeMap.java:77)&#xA;org.web3j.protocol.core.RemoteCall.lambda$observable$0(RemoteCall.java:51)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.subscribe(Observable.java:10423)&#xA;rx.Observable.subscribe(Observable.java:10390)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.PrivateSmartContract.setupContract(PrivateSmartContract.java:63)&#xA;</failure>
		</testcase>
		<testcase classname="Single private smart contract" name="Privacy is enforced between parties" time="0.154">
			<failure message="Deploy a simple smart contract with initial value &#34;42&#34; in &#34;Node1&#34;&#39;s default account and it&#39;s private for &#34;Node7&#34;, named this contract as &#34;contract17&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Type:[text/plain] Content-Length:[18] Connection:[keep-alive]] Body:0xc435557000 ContentLength:18 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc4355e6200 TLS:&lt;nil&gt;}&#39;" type="Deploy a simple smart contract with initial value &#34;42&#34; in &#34;Node1&#34;&#39;s default account and it&#39;s private for &#34;Node7&#34;, named this contract as &#34;contract17&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Type:[text/plain] Content-Length:[18] Connection:[keep-alive]] Body:0xc435557000 ContentLength:18 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc4355e6200 TLS:&lt;nil&gt;}&#39;">org.web3j.tx.Contract.deploy(Contract.java:375)&#xA;org.web3j.tx.Contract.lambda$deployRemoteCall$6(Contract.java:404)&#xA;org.web3j.protocol.core.RemoteCall.send(RemoteCall.java:30)&#xA;org.web3j.protocol.core.RemoteCall.lambda$observable$0(RemoteCall.java:51)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:248)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:148)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.onNext(OnSubscribeMap.java:77)&#xA;rx.internal.producers.SingleProducer.request(SingleProducer.java:65)&#xA;rx.Subscriber.setProducer(Subscriber.java:211)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.setProducer(OnSubscribeMap.java:102)&#xA;rx.internal.operators.OperatorSingle$ParentSubscriber.onCompleted(OperatorSingle.java:110)&#xA;rx.internal.operators.OperatorTake$1.onNext(OperatorTake.java:83)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.emitScalar(OperatorMerge.java:395)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.tryEmit(OperatorMerge.java:355)&#xA;rx.internal.operators.OperatorMerge$InnerSubscriber.onNext(OperatorMerge.java:846)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.slowPath(OnSubscribeFromIterable.java:117)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.request(OnSubscribeFromIterable.java:89)&#xA;rx.Subscriber.setProducer(Subscriber.java:211)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:63)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:34)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:248)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:148)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.onNext(OnSubscribeMap.java:77)&#xA;org.web3j.protocol.core.RemoteCall.lambda$observable$0(RemoteCall.java:51)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.subscribe(Observable.java:10423)&#xA;rx.Observable.subscribe(Observable.java:10390)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.PrivateSmartContract.setupContract(PrivateSmartContract.java:63)&#xA;</failure>
		</testcase>
		<testcase classname="Single private smart contract" name="When there&#39;s an update, privacy is still enforced" time="0.143">
			<failure message="Deploy a simple smart contract with initial value &#34;42&#34; in &#34;Node1&#34;&#39;s default account and it&#39;s private for &#34;Node7&#34;, named this contract as &#34;contract17&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Length:[18] Connection:[keep-alive] Content-Type:[text/plain]] Body:0xc4355bc940 ContentLength:18 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc4355a8d00 TLS:&lt;nil&gt;}&#39;" type="Deploy a simple smart contract with initial value &#34;42&#34; in &#34;Node1&#34;&#39;s default account and it&#39;s private for &#34;Node7&#34;, named this contract as &#34;contract17&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Length:[18] Connection:[keep-alive] Content-Type:[text/plain]] Body:0xc4355bc940 ContentLength:18 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc4355a8d00 TLS:&lt;nil&gt;}&#39;">org.web3j.tx.Contract.deploy(Contract.java:375)&#xA;org.web3j.tx.Contract.lambda$deployRemoteCall$6(Contract.java:404)&#xA;org.web3j.protocol.core.RemoteCall.send(RemoteCall.java:30)&#xA;org.web3j.protocol.core.RemoteCall.lambda$observable$0(RemoteCall.java:51)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:248)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:148)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.onNext(OnSubscribeMap.java:77)&#xA;rx.internal.producers.SingleProducer.request(SingleProducer.java:65)&#xA;rx.Subscriber.setProducer(Subscriber.java:211)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.setProducer(OnSubscribeMap.java:102)&#xA;rx.internal.operators.OperatorSingle$ParentSubscriber.onCompleted(OperatorSingle.java:110)&#xA;rx.internal.operators.OperatorTake$1.onNext(OperatorTake.java:83)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.emitScalar(OperatorMerge.java:395)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.tryEmit(OperatorMerge.java:355)&#xA;rx.internal.operators.OperatorMerge$InnerSubscriber.onNext(OperatorMerge.java:846)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.slowPath(OnSubscribeFromIterable.java:117)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.request(OnSubscribeFromIterable.java:89)&#xA;rx.Subscriber.setProducer(Subscriber.java:211)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:63)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:34)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:248)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:148)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.onNext(OnSubscribeMap.java:77)&#xA;org.web3j.protocol.core.RemoteCall.lambda$observable$0(RemoteCall.java:51)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.subscribe(Observable.java:10423)&#xA;rx.Observable.subscribe(Observable.java:10390)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.PrivateSmartContract.setupContract(PrivateSmartContract.java:63)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="4" tests="1" failures="1" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_spam.spec" time="0.117" timestamp="2018-11-22T15:34:33" name="Multiple private smart contracts between nodes" errors="0" hostname="travis-job-16ea77a1-d8ed-4609-9228-7f1c47a9936c">
		<properties></properties>
		<testcase classname="Multiple private smart contracts between nodes" name="Send transactions from one node to others" time="0.117">
			<failure message="Send &#34;10&#34; simple private smart contracts from a default account in &#34;Node1&#34; and it&#39;s separately private for &#34;Node2,Node3&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Type:[text/plain] Content-Length:[18] Connection:[keep-alive]] Body:0xc4355bce40 ContentLength:18 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc435604500 TLS:&lt;nil&gt;}&#39;" type="Send &#34;10&#34; simple private smart contracts from a default account in &#34;Node1&#34; and it&#39;s separately private for &#34;Node2,Node3&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Type:[text/plain] Content-Length:[18] Connection:[keep-alive]] Body:0xc4355bce40 ContentLength:18 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc435604500 TLS:&lt;nil&gt;}&#39;">org.web3j.tx.Contract.deploy(Contract.java:375)&#xA;org.web3j.tx.Contract.lambda$deployRemoteCall$6(Contract.java:404)&#xA;org.web3j.protocol.core.RemoteCall.send(RemoteCall.java:30)&#xA;org.web3j.protocol.core.RemoteCall.lambda$observable$0(RemoteCall.java:51)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:248)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:148)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.onNext(OnSubscribeMap.java:77)&#xA;rx.internal.producers.SingleProducer.request(SingleProducer.java:65)&#xA;rx.Subscriber.setProducer(Subscriber.java:211)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.setProducer(OnSubscribeMap.java:102)&#xA;rx.internal.operators.OperatorSingle$ParentSubscriber.onCompleted(OperatorSingle.java:110)&#xA;rx.internal.operators.OperatorTake$1.onNext(OperatorTake.java:83)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.emitScalar(OperatorMerge.java:395)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.tryEmit(OperatorMerge.java:355)&#xA;rx.internal.operators.OperatorMerge$InnerSubscriber.onNext(OperatorMerge.java:846)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.slowPath(OnSubscribeFromIterable.java:117)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.request(OnSubscribeFromIterable.java:89)&#xA;rx.Subscriber.setProducer(Subscriber.java:211)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:63)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:34)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:248)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:148)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.onNext(OnSubscribeMap.java:77)&#xA;org.web3j.protocol.core.RemoteCall.lambda$observable$0(RemoteCall.java:51)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber.call(OperatorSubscribeOn.java:100)&#xA;rx.internal.schedulers.CachedThreadScheduler$EventLoopWorker$1.call(CachedThreadScheduler.java:230)&#xA;rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)&#xA;java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)&#xA;java.util.concurrent.FutureTask.run(FutureTask.java:266)&#xA;java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)&#xA;java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)&#xA;java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)&#xA;java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)&#xA;java.lang.Thread.run(Thread.java:748)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="5" tests="2" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/value_transfer_public_transactions.spec" time="1.013" timestamp="2018-11-22T15:34:33" name="Value transfer in public transactions" errors="0" hostname="travis-job-16ea77a1-d8ed-4609-9228-7f1c47a9936c">
		<properties></properties>
		<testcase classname="Value transfer in public transactions" name="Successful public transaction submission" time="0.463"></testcase>
		<testcase classname="Value transfer in public transactions" name="Successful signed public transaction submission" time="0.550"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="6" tests="2" failures="1" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_async.spec" time="2.830" timestamp="2018-11-22T15:34:33" name="Sending private smart contract asynchronously" errors="0" hostname="travis-job-16ea77a1-d8ed-4609-9228-7f1c47a9936c">
		<properties></properties>
		<testcase classname="Sending private smart contract asynchronously" name="Contract is successfully mined with valid account" time="1.660">
			<failure message="Transaction Receipt is present in &#34;Node1&#34; for &#34;contract17&#34;&#xA;Step Execution Failure: &#39;java.lang.AssertionError: [Value class for key [contract17_transactionHash] in Gauge DataStore] &#xA;Expecting actual not to be null&#39;" type="Transaction Receipt is present in &#34;Node1&#34; for &#34;contract17&#34;&#xA;Step Execution Failure: &#39;java.lang.AssertionError: [Value class for key [contract17_transactionHash] in Gauge DataStore] &#xA;Expecting actual not to be null&#39;">com.quorum.gauge.core.AbstractSpecImplementation.mustHaveValue(AbstractSpecImplementation.java:76)&#xA;com.quorum.gauge.PrivateSmartContract.verifyTransactionReceipt(PrivateSmartContract.java:81)&#xA;</failure>
		</testcase>
		<testcase classname="Sending private smart contract asynchronously" name="Contract is not mined with non-existed account" time="1.170"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="7" tests="1" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_state_manipulation.spec" time="0.000" timestamp="2018-11-22T15:34:33" name="State manipulation in private smart contract" errors="0" hostname="travis-job-16ea77a1-d8ed-4609-9228-7f1c47a9936c">
		<properties></properties>
		<testcase classname="State manipulation in private smart contract" name="Private state is maintained" time="0.000">
			<skipped message="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_state_manipulation.spec:27 Step implementation not found =&gt; &#39;Note: this step is not implemented indicating that the spec execution is temporarily skipped&#39;"></skipped>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="8" tests="1" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/public_smart_contract_event.spec" time="3.440" timestamp="2018-11-22T15:34:33" name="Public smart contract with event" errors="0" hostname="travis-job-16ea77a1-d8ed-4609-9228-7f1c47a9936c">
		<properties></properties>
		<testcase classname="Public smart contract with event" name="Log events in total are captured when executing the contract" time="3.440"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="9" tests="2" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/value_transfer_private_transactions.spec" time="0.509" timestamp="2018-11-22T15:34:33" name="Value transfer in private transactions" errors="0" hostname="travis-job-16ea77a1-d8ed-4609-9228-7f1c47a9936c">
		<properties></properties>
		<testcase classname="Value transfer in private transactions" name="Unsuccessful private transaction submission" time="0.246"></testcase>
		<testcase classname="Value transfer in private transactions" name="Unsuccessful signed private transaction submission" time="0.263"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="10" tests="1" failures="1" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/02_advanced/transactions_for_block_height.spec" time="0.158" timestamp="2018-11-22T15:34:33" name="Transactions for different block heights" errors="0" hostname="travis-job-16ea77a1-d8ed-4609-9228-7f1c47a9936c">
		<properties></properties>
		<testcase classname="Transactions for different block heights" name="Private smart contracts for Raft consensus" time="0.158">
			<failure message="Deploy &#34;100&#34; private smart contracts between a default account in &#34;Node1&#34; and a default account in &#34;Node7&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Type:[text/plain] Content-Length:[18] Connection:[keep-alive]] Body:0xc435b0b4c0 ContentLength:18 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc435a43c00 TLS:&lt;nil&gt;}&#39;" type="Deploy &#34;100&#34; private smart contracts between a default account in &#34;Node1&#34; and a default account in &#34;Node7&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Type:[text/plain] Content-Length:[18] Connection:[keep-alive]] Body:0xc435b0b4c0 ContentLength:18 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc435a43c00 TLS:&lt;nil&gt;}&#39;">org.web3j.tx.Contract.deploy(Contract.java:375)&#xA;org.web3j.tx.Contract.lambda$deployRemoteCall$6(Contract.java:404)&#xA;org.web3j.protocol.core.RemoteCall.send(RemoteCall.java:30)&#xA;org.web3j.protocol.core.RemoteCall.lambda$observable$0(RemoteCall.java:51)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:248)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:148)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.onNext(OnSubscribeMap.java:77)&#xA;rx.internal.producers.SingleProducer.request(SingleProducer.java:65)&#xA;rx.Subscriber.setProducer(Subscriber.java:211)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.setProducer(OnSubscribeMap.java:102)&#xA;rx.internal.operators.OperatorSingle$ParentSubscriber.onCompleted(OperatorSingle.java:110)&#xA;rx.internal.operators.OperatorTake$1.onNext(OperatorTake.java:83)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.emitScalar(OperatorMerge.java:395)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.tryEmit(OperatorMerge.java:355)&#xA;rx.internal.operators.OperatorMerge$InnerSubscriber.onNext(OperatorMerge.java:846)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.slowPath(OnSubscribeFromIterable.java:117)&#xA;rx.internal.operators.OnSubscribeFromIterable$IterableProducer.request(OnSubscribeFromIterable.java:89)&#xA;rx.Subscriber.setProducer(Subscriber.java:211)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:63)&#xA;rx.internal.operators.OnSubscribeFromIterable.call(OnSubscribeFromIterable.java:34)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:248)&#xA;rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:148)&#xA;rx.internal.operators.OnSubscribeMap$MapSubscriber.onNext(OnSubscribeMap.java:77)&#xA;org.web3j.protocol.core.RemoteCall.lambda$observable$0(RemoteCall.java:51)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)&#xA;rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.unsafeSubscribe(Observable.java:10327)&#xA;rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber.call(OperatorSubscribeOn.java:100)&#xA;rx.internal.schedulers.CachedThreadScheduler$EventLoopWorker$1.call(CachedThreadScheduler.java:230)&#xA;rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)&#xA;java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)&#xA;java.util.concurrent.FutureTask.run(FutureTask.java:266)&#xA;java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)&#xA;java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)&#xA;java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)&#xA;java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)&#xA;java.lang.Thread.run(Thread.java:748)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
</testsuites>