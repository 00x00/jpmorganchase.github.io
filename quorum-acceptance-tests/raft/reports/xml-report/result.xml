<testsuites>
	<testsuite id="1" tests="5" failures="1" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/externally_signed_private_raw_smart_contract_single.spec" time="85.523" timestamp="2019-01-23T16:11:54" name="Single private smart contract when signed externally" errors="0" hostname="travis-job-3267a0fe-0b05-449a-b50e-418e5531378e">
		<properties></properties>
		<testcase classname="Single private smart contract when signed externally" name="Contract is mined" time="17.293"></testcase>
		<testcase classname="Single private smart contract when signed externally" name="Storage Root storing private smart contracts must be the same" time="16.614"></testcase>
		<testcase classname="Single private smart contract when signed externally" name="Transaction payload is secured" time="17.045"></testcase>
		<testcase classname="Single private smart contract when signed externally" name="Privacy is enforced between parties" time="16.700"></testcase>
		<testcase classname="Single private smart contract when signed externally" name="When there&#39;s an update, privacy is still enforced" time="17.871">
			<failure message="Execute &#34;contract31&#34;&#39;s `set()` function with new value &#34;5&#34; signed by external wallet &#34;Wallet8&#34; in &#34;Node1&#34; and it&#39;s private for &#34;Node7&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Type:[text/plain] Content-Length:[128] Connection:[keep-alive]] Body:0xc422cc84c0 ContentLength:128 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc4200df000 TLS:&lt;nil&gt;}&#39;" type="Execute &#34;contract31&#34;&#39;s `set()` function with new value &#34;5&#34; signed by external wallet &#34;Wallet8&#34; in &#34;Node1&#34; and it&#39;s private for &#34;Node7&#34;&#xA;Step Execution Failure: &#39;java.lang.RuntimeException: Error processing transaction request: Non-200 status code: &amp;{Status:404 Not Found StatusCode:404 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Type:[text/plain] Content-Length:[128] Connection:[keep-alive]] Body:0xc422cc84c0 ContentLength:128 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc4200df000 TLS:&lt;nil&gt;}&#39;">org.web3j.tx.TransactionManager.processResponse(TransactionManager.java:67)&#xA;org.web3j.tx.TransactionManager.executeTransaction(TransactionManager.java:51)&#xA;org.web3j.tx.ManagedTransaction.send(ManagedTransaction.java:87)&#xA;org.web3j.tx.Contract.executeTransaction(Contract.java:275)&#xA;org.web3j.tx.Contract.executeTransaction(Contract.java:259)&#xA;org.web3j.tx.Contract.executeTransaction(Contract.java:253)&#xA;org.web3j.tx.Contract.lambda$executeRemoteCallTransaction$3(Contract.java:305)&#xA;org.web3j.protocol.core.RemoteCall.send(RemoteCall.java:30)&#xA;org.web3j.protocol.core.RemoteCall.lambda$observable$0(RemoteCall.java:51)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)&#xA;rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)&#xA;rx.Observable.subscribe(Observable.java:10423)&#xA;rx.Observable.subscribe(Observable.java:10390)&#xA;rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)&#xA;rx.observables.BlockingObservable.first(BlockingObservable.java:166)&#xA;com.quorum.gauge.PrivateRawSmartContract.updateNewValue(PrivateRawSmartContract.java:52)&#xA;</failure>
		</testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="2" tests="2" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_event.spec" time="10.880" timestamp="2019-01-23T16:11:54" name="Private smart contract with event" errors="0" hostname="travis-job-3267a0fe-0b05-449a-b50e-418e5531378e">
		<properties></properties>
		<testcase classname="Private smart contract with event" name="Log events in total are **only** captured in participated parties when executing the contract" time="3.446"></testcase>
		<testcase classname="Private smart contract with event" name="Log events in the state are **only** captured in participated parties when executing the contract" time="7.434"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="3" tests="1" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_spam.spec" time="7.886" timestamp="2019-01-23T16:11:54" name="Multiple private smart contracts between nodes" errors="0" hostname="travis-job-3267a0fe-0b05-449a-b50e-418e5531378e">
		<properties></properties>
		<testcase classname="Multiple private smart contracts between nodes" name="Send transactions from one node to others" time="7.886"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="4" tests="2" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/value_transfer_private_transactions.spec" time="0.399" timestamp="2019-01-23T16:11:54" name="Value transfer in private transactions" errors="0" hostname="travis-job-3267a0fe-0b05-449a-b50e-418e5531378e">
		<properties></properties>
		<testcase classname="Value transfer in private transactions" name="Unsuccessful private transaction submission" time="0.103"></testcase>
		<testcase classname="Value transfer in private transactions" name="Unsuccessful signed private transaction submission" time="0.296"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="5" tests="3" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/externally_signed_public_raw_smart_contract_single.spec" time="3.428" timestamp="2019-01-23T16:11:54" name="Public raw smart contract when signed externally" errors="0" hostname="travis-job-3267a0fe-0b05-449a-b50e-418e5531378e">
		<properties></properties>
		<testcase classname="Public raw smart contract when signed externally" name="Contract is deployed and mined" time="1.395"></testcase>
		<testcase classname="Public raw smart contract when signed externally" name="Everyone in the network has the same state for the contract" time="0.301"></testcase>
		<testcase classname="Public raw smart contract when signed externally" name="When there&#39;s an update, every node is updated" time="1.732"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="6" tests="1" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_multiple.spec" time="17.816" timestamp="2019-01-23T16:11:54" name="Multiple private smart contracts" errors="0" hostname="travis-job-3267a0fe-0b05-449a-b50e-418e5531378e">
		<properties></properties>
		<testcase classname="Multiple private smart contracts" name="Contracts are mined" time="17.816"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="7" tests="5" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_single.spec" time="1.854" timestamp="2019-01-23T16:11:54" name="Single private smart contract" errors="0" hostname="travis-job-3267a0fe-0b05-449a-b50e-418e5531378e">
		<properties></properties>
		<testcase classname="Single private smart contract" name="Contract is mined" time="0.328"></testcase>
		<testcase classname="Single private smart contract" name="Storage Root storing private smart contracts must be the same" time="0.178"></testcase>
		<testcase classname="Single private smart contract" name="Transaction payload is secured" time="0.467"></testcase>
		<testcase classname="Single private smart contract" name="Privacy is enforced between parties" time="0.381"></testcase>
		<testcase classname="Single private smart contract" name="When there&#39;s an update, privacy is still enforced" time="0.500"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="8" tests="2" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/value_transfer_public_transactions.spec" time="1.060" timestamp="2019-01-23T16:11:54" name="Value transfer in public transactions" errors="0" hostname="travis-job-3267a0fe-0b05-449a-b50e-418e5531378e">
		<properties></properties>
		<testcase classname="Value transfer in public transactions" name="Successful public transaction submission" time="0.533"></testcase>
		<testcase classname="Value transfer in public transactions" name="Successful signed public transaction submission" time="0.527"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="9" tests="1" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/02_advanced/transactions_for_block_height.spec" time="4.351" timestamp="2019-01-23T16:11:54" name="Transactions for different block heights" errors="0" hostname="travis-job-3267a0fe-0b05-449a-b50e-418e5531378e">
		<properties></properties>
		<testcase classname="Transactions for different block heights" name="Private smart contracts for Raft consensus" time="4.351"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="10" tests="7" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/estimate_gas.spec" time="3.721" timestamp="2019-01-23T16:11:54" name="Estimate gas required for transactions and contracts" errors="0" hostname="travis-job-3267a0fe-0b05-449a-b50e-418e5531378e">
		<properties></properties>
		<testcase classname="Estimate gas required for transactions and contracts" name="Estimate gas required for public transaction" time="0.481"></testcase>
		<testcase classname="Estimate gas required for transactions and contracts" name="Deploy public smart contract, this is used for estimating the calls (we also need it so we can use the binary data in the estimateGas() acceptance tests below)" time="0.159"></testcase>
		<testcase classname="Estimate gas required for transactions and contracts" name="Estimate gas required to create public smart contract" time="0.147"></testcase>
		<testcase classname="Estimate gas required for transactions and contracts" name="Estimate gas required to call a public smart contract" time="0.161"></testcase>
		<testcase classname="Estimate gas required for transactions and contracts" name="Deploy private smart contract, this is used for estimating the calls (we also need it so we can use the binary data in the estimateGas() acceptance tests below)" time="2.493"></testcase>
		<testcase classname="Estimate gas required for transactions and contracts" name="Estimate gas required to create private smart contract" time="0.139"></testcase>
		<testcase classname="Estimate gas required for transactions and contracts" name="Estimate gas required to call a private smart contract" time="0.141"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="11" tests="2" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_async.spec" time="2.454" timestamp="2019-01-23T16:11:54" name="Sending private smart contract asynchronously" errors="0" hostname="travis-job-3267a0fe-0b05-449a-b50e-418e5531378e">
		<properties></properties>
		<testcase classname="Sending private smart contract asynchronously" name="Contract is successfully mined with valid account" time="1.395"></testcase>
		<testcase classname="Sending private smart contract asynchronously" name="Contract is not mined with non-existed account" time="1.059"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="12" tests="1" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_state_manipulation.spec" time="0.000" timestamp="2019-01-23T16:11:54" name="State manipulation in private smart contract" errors="0" skipped="1" hostname="travis-job-3267a0fe-0b05-449a-b50e-418e5531378e">
		<properties></properties>
		<testcase classname="State manipulation in private smart contract" name="Private state is maintained" time="0.000">
			<skipped message="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/private_smart_contract_state_manipulation.spec:27 Step implementation not found =&gt; &#39;Note: this step is not implemented indicating that the spec execution is temporarily skipped&#39;"></skipped>
		</testcase>
		<system-out></system-out>
		<system-err>Validation failed, 1 Scenarios were skipped.</system-err>
	</testsuite>
	<testsuite id="13" tests="1" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/public_smart_contract_event.spec" time="1.225" timestamp="2019-01-23T16:11:54" name="Public smart contract with event" errors="0" hostname="travis-job-3267a0fe-0b05-449a-b50e-418e5531378e">
		<properties></properties>
		<testcase classname="Public smart contract with event" name="Log events in total are captured when executing the contract" time="1.225"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="14" tests="4" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/smart_contract_dual_state.spec" time="4.763" timestamp="2019-01-23T16:11:54" name="Dual state implementation when peforming function calls from one smart contract to another" errors="0" hostname="travis-job-3267a0fe-0b05-449a-b50e-418e5531378e">
		<properties></properties>
		<testcase classname="Dual state implementation when peforming function calls from one smart contract to another" name="Function calls between all public smart contracts: public -&gt; public -&gt; public" time="1.148"></testcase>
		<testcase classname="Dual state implementation when peforming function calls from one smart contract to another" name="Function calls between all private smart contracts: private -&gt; private -&gt; private" time="1.241"></testcase>
		<testcase classname="Dual state implementation when peforming function calls from one smart contract to another" name="Function calls from a private smart contract to public smart contracts: private -&gt; public -&gt; public" time="1.204"></testcase>
		<testcase classname="Dual state implementation when peforming function calls from one smart contract to another" name="Function calls from a public smart contract to private smart contracts: public -&gt; private -&gt; private" time="1.170"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
	<testsuite id="15" tests="1" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/02_advanced/private_transaction_bloom_section.spec" time="0.000" timestamp="2019-01-23T16:11:54" name="Private smart contract with event in the next bloom bit section" errors="0" skipped="1" hostname="travis-job-3267a0fe-0b05-449a-b50e-418e5531378e">
		<properties></properties>
		<testcase classname="Private smart contract with event in the next bloom bit section" name="Log events are **only** captured in participated parties when executing the contract" time="0.000">
			<skipped message="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/02_advanced/private_transaction_bloom_section.spec:28 Step implementation not found =&gt; &#39;Note: this spec requires a revisit due to high block number setup&#39;"></skipped>
		</testcase>
		<system-out></system-out>
		<system-err>Validation failed, 1 Scenarios were skipped.</system-err>
	</testsuite>
	<testsuite id="16" tests="3" failures="0" package="/home/travis/build/jpmorganchase/quorum-acceptance-tests/src/specs/01_basic/raft_gas_usage.spec" time="2.284" timestamp="2019-01-23T16:11:54" name="Gas usage for private contracts on participant and non-participant nodes" errors="0" hostname="travis-job-3267a0fe-0b05-449a-b50e-418e5531378e">
		<properties></properties>
		<testcase classname="Gas usage for private contracts on participant and non-participant nodes" name="Private contract with gas below intrinsic gas should be rejected (and not remain pending)." time="0.919"></testcase>
		<testcase classname="Gas usage for private contracts on participant and non-participant nodes" name="Private contract with gas between intrinsic gas and required gas should be rejected (and not remain pending)." time="0.717"></testcase>
		<testcase classname="Gas usage for private contracts on participant and non-participant nodes" name="Private contract with sufficient gas should be accepted." time="0.648"></testcase>
		<system-out></system-out>
		<system-err></system-err>
	</testsuite>
</testsuites>