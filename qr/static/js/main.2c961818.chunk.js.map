{"version":3,"sources":["utils/Styles.js","utils/TypeUtils.js","utils/ContractUtils.js","api/index.js","actions/error.js","actions/contracts.js","actions/tessera.js","actions/network.js","actions/txMetadata.js","components/InputTooltip.js","components/Network.js","components/PrivateFor.js","components/TxMetadata.js","components/Transact.js","components/Constructor.js","components/Deploy.js","components/Contract.js","components/ContractList.js","components/Error.js","components/App.js","serviceWorker.js","reducers/error.js","reducers/network.js","reducers/txMetadata.js","reducers/compilation.js","reducers/tessera.js","reducers/deployed.js","reducers/index.js","index.js"],"names":["appStyle","display","alignItems","flexDirection","minHeight","networkStyle","width","formContainerStyle","containerStyle","marginTop","buttonStyle","margin","minWidth","wordBreak","borderRadius","borderTopRightRadius","borderBottomRightRadius","borderRight","overflowX","textOverflow","inputStyle","border","fontSize","padding","borderTopLeftRadius","borderBottomLeftRadius","borderLeft","flexGrow","contractStyle","headerStyle","marginBottom","bodyStyle","orStyle","height","textAlign","iconStyle","cursor","verticalAlign","textDecoration","smallIconStyle","ellipsisStyle","whiteSpace","overflow","addonButtonStyle","txMetaRowStyle","paddingTop","txMetaRowRightStyle","justifyContent","labelStyle","inlineInputStyle","maxWidth","marginRight","checkboxLabelStyle","footerStyle","logoStyle","alignSelf","errorContainerStyle","errorStyle","color","reactSelectStyle","optionStyle","optionLabelContainerStyle","optionLabelStyle","statusStyle","status","toAscii","value","Array","isArray","map","v","Web3","utils","fromAscii","getMethodSignature","method","name","inputs","input","type","join","getConstructor","abi","constructorMethods","filter","length","payable","constant","normalizeCompilationOutput","data","contracts","Object","entries","forEach","filename","fileContents","contractName","contractData","web3","tessera","updateWeb3Url","endpoint","tesseraEndpoint","a","testUrls","rpcEndpoint","Error","axios","post","body","JSON","stringify","response","statusText","message","get","getAccounts","eth","getTesseraParties","keys","party","formatAsSelectOption","key","label","deploy","contract","params","txMetadata","constructor","bytecode","evm","object","orderedParams","startsWith","tx","from","account","gasPrice","gas","gasLimit","toWei","valueDenomination","privateFrom","privateFor","web3Contract","Contract","arguments","deployableContract","send","contractMethod","selectedPrivateFor","_params","values","_sig_params","methodSig","methodArgs","args","enabled","verifyContract","address","web3Method","methods","callOrSend","res","getCode","setError","payload","setContractDeploying","isDeploying","fetchCompilationSuccess","result","setContractLoading","loading","methodCallSuccess","methodSignature","selectContract","addContract","fetchCompilationResult","client","dispatch","solidity","getCompilationResult","console","log","addPublicKey","option","setTesseraOptions","options","editNetwork","edit","setNetwork","accounts","editing","connectToNetwork","error","saveNetwork","endsWith","substring","updatePrivateFor","selection","selectAccount","defaults","headers","InputTooltip","text","children","OverlayTrigger","placement","trigger","show","overlay","Popover","className","id","Content","Network","state","useSelector","useDispatch","network","React","useState","endpointInput","setEndpointInput","tesseraEndpointInput","setTesseraEndpointInput","useEffect","onSave","style","onSubmit","e","preventDefault","disabled","onChange","target","placeholder","onClick","PrivateFor","keysFromUser","shallowEqual","keysFromServer","isFromServer","selectedOptions","includes","SelectContainer","Select","Creatable","components","Option","closeMenuOnSelect","isMulti","autosize","formatCreateLabel","onCreateOption","inputValue","isBase64","userCreated","props","TxMetadata","copyAddress","copy","defaultValue","changeGasPrice","changeGasLimit","changeValue","changeValueDenomination","Method","expanded","setExpanded","inputValues","setInputValues","singleLineInput","setSingleLineInput","submit","stopPropagation","onSingleLineInputChange","inputString","newInputValues","split","i","inputName","trim","onInputChange","onCaretClick","shouldExpand","methodName","data-method","title","normalizeResult","outputs","TransactionInput","initialValues","toString","isDynamic","isDynamicArray","setValues","setValuesAndNotify","newValues","getInputPlaceholder","index","data-param","data-type","splice","onMinus","onPlus","match","singleOutput","output","Constructor","onDeploy","onExisting","existingAddress","setExistingAddress","Deploy","compilation","selectedContract","deploying","deployContract","addExistingContract","deployed","deployedContracts","setSelectedPrivateFor","getResultForMethod","results","expand","expandContract","removeContract","checked","newSelected","sort","b","localeCompare","__ret","doMethodCall","ContractList","deployedAddresses","Footer","process","src","alt","App","isConnected","Boolean","window","location","hostname","initialState","rootReducer","combineReducers","action","localStorage","undefined","newKeys","newAddresses","indexOf","push","addressToDelete","newDeployedContracts","toContract","deployedContract","resetDeployedContracts","QuorumPlugin","PluginClient","store","createStore","composeWithDevTools","applyMiddleware","thunk","buildIframeClient","initPlugin","savedNetwork","parse","on","fileName","source","languageVersion","onload","ReactDOM","render","document","getElementById","catch","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2c961818.chunk.js","sourcesContent":["export const appStyle = {\n  display: 'flex',\n  alignItems: 'flex-start',\n  flexDirection: 'column',\n  minHeight: '100%',\n}\n\nexport const networkStyle = {\n  display: 'flex',\n  alignItems: 'flex-end',\n  flexDirection: 'column',\n  width: '100%',\n}\n\nexport const formContainerStyle = {\n  width: '100%',\n}\n\nexport const containerStyle = {\n  display: 'flex',\n  marginTop: 8,\n}\n\nexport const buttonStyle = {\n  margin: 0,\n  minWidth: 100,\n  width: 100,\n  wordBreak: 'inherit',\n  borderRadius: 3,\n  borderTopRightRadius: 0,\n  borderBottomRightRadius: 0,\n  borderRight: 0,\n  overflowX: 'hidden',\n  textOverflow: 'ellipsis',\n}\n\nexport const inputStyle = {\n  border: '1px solid #dddddd',\n  fontSize: 10,\n  padding: '.36em',\n  borderRadius: 5,\n  borderTopLeftRadius: 0,\n  borderBottomLeftRadius: 0,\n  borderLeft: 0,\n  flexGrow: 1,\n}\n\nexport const contractStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  marginTop: 8,\n}\n\nexport const headerStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: 0,\n}\n\nexport const bodyStyle = {\n  padding: '0px 0 10px 10px',\n  border: '1px solid rgba(0,0,0,0.125)',\n  borderTopLeftRadius: 0,\n  borderBottomLeftRadius: '0.25rem',\n  borderTopRightRadius: 0,\n  borderBottomRightRadius: '0.25rem',\n}\n\nexport const orStyle = {\n  width: 100,\n  height: 28,\n  textAlign: 'center',\n  marginTop: 4,\n  marginBottom: -5\n}\n\nexport const iconStyle = {\n  cursor: 'pointer',\n  minWidth: 28,\n  textAlign: 'center',\n  fontSize: 16,\n  padding: 8,\n  verticalAlign: 'center',\n  textDecoration: 'none',\n}\n\nexport const smallIconStyle = {\n  cursor: 'pointer',\n  textAlign: 'center',\n  fontSize: 11,\n  padding: 3,\n  verticalAlign: 'center',\n  textDecoration: 'none',\n}\n\nexport const ellipsisStyle = {\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  fontSize: '11px',\n}\n\nexport const addonButtonStyle = {\n  margin: 0,\n  wordBreak: 'inherit',\n  borderTopRightRadius: 0,\n  borderBottomRightRadius: 0,\n  borderRight: 0,\n}\n\nexport const txMetaRowStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  paddingTop: 4,\n  width: '100%',\n}\n\nexport const txMetaRowRightStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  paddingTop: 4,\n  justifyContent: 'flex-end',\n}\n\nexport const labelStyle = {\n  fontSize: 12,\n  whiteSpace: 'nowrap',\n  minWidth: 72,\n}\n\nexport const smallLabelStyle = {\n  whiteSpace: 'nowrap',\n  minWidth: 72,\n  fontSize: 12,\n}\n\nexport const inlineInputStyle = {\n  maxWidth: 92,\n  marginRight: 4,\n}\n\nexport const checkboxLabelStyle = {\n  display: 'block',\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n}\n\nexport const footerStyle = {\n  display: 'flex',\n  width: '100%',\n  justifyContent: 'space-between',\n  height: 18,\n  marginTop: 12,\n  marginBottom: 8,\n  fontSize: 12,\n}\n\nexport const logoStyle = {\n  height: 18,\n  marginBottom: 4,\n  alignSelf: 'flex-end',\n}\n\nexport const errorContainerStyle = {\n  display: 'flex',\n  marginBottom: 6,\n  width: '100%',\n}\n\nexport const errorStyle = {\n  fontSize: 11,\n  color: 'red',\n  width: 0,\n  flexGrow: 1,\n}\n\nexport const reactSelectStyle = {\n  width: 0,\n  flexGrow: 1\n}\n\nexport const optionStyle = {\n  display: 'flex',\n  width: '100%',\n  height: '100%',\n  alignItems: 'center',\n}\nexport const optionLabelContainerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  flexGrow: 1,\n}\nexport const optionLabelStyle = {\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  color: '#222'\n}\n\nexport const statusStyle = (status) => {\n  let color\n  if (status === 'Connected') {\n    color = 'green'\n  } else if (status === 'Connecting...') {\n    color = 'black'\n  } else {\n    color = 'red'\n  }\n  return {\n    color,\n    fontSize: 11,\n    marginRight: 8,\n  }\n}\n\n","import Web3 from 'web3'\n\nexport function toAscii (value) {\n  return Array.isArray(value)\n    ? value.map((v) => toAscii(v))\n    : Web3.utils.toAscii(value)\n}\n\nexport function fromAscii (value) {\n  return Array.isArray(value)\n    ? value.map((v) => fromAscii(v))\n    : Web3.utils.fromAscii(value)\n}\n\n\n","export function getMethodSignature (method) {\n  return `${method.name}(${method.inputs.map(\n    (input) => `${input.type} ${input.name}`).join(', ')})`\n}\n\nexport function getConstructor (abi) {\n  const constructorMethods = abi.filter(\n    (method) => method.type === 'constructor')\n  if (constructorMethods.length > 0) {\n    return constructorMethods[0]\n  }\n  return {\n    type: 'constructor',\n    inputs: [],\n    payable: false,\n    constant: false,\n    name: '',\n  }\n}\n\nexport function normalizeCompilationOutput (data) {\n  if (data === null) {\n    return {}\n  }\n  const contracts = {}\n  Object.entries(data.contracts).forEach(([filename, fileContents]) => {\n    Object.entries(fileContents).forEach(([contractName, contractData]) => {\n      let name = `${contractName} - ${filename}`\n      contracts[name] = { ...contractData, contractName, filename }\n    })\n  })\n  return contracts\n}\n","import Web3 from 'web3'\nimport { fromAscii } from '../utils/TypeUtils'\nimport { getConstructor } from '../utils/ContractUtils'\nimport axios from 'axios'\n\naxios.defaults.headers.post['Content-Type'] = 'application/json'\n\nlet web3, tessera\n\nexport async function updateWeb3Url (endpoint, tesseraEndpoint) {\n  web3 = new Web3(endpoint)\n  tessera = tesseraEndpoint\n  await testUrls(endpoint, tesseraEndpoint)\n}\n\nexport async function testUrls (rpcEndpoint, tesseraEndpoint) {\n  if (!rpcEndpoint) {\n    throw new Error('RPC url must not be blank.')\n  }\n  try {\n    await axios.post(rpcEndpoint, {\n      body: JSON.stringify(\n        { 'jsonrpc': '2.0', 'method': 'eth_protocolVersion', 'params': [] }),\n    })\n  } catch (e) {\n    if (e.response) {\n      throw new Error(\n        `Error response from ${rpcEndpoint}: ${e.response.status} ${e.response.statusText} ${e.response.data}`)\n    } else {\n      throw new Error(\n        `Could not connect to ${rpcEndpoint}: ${e.message}. This could be: a. geth is not running at this address, b. the port is not accessible, or c. CORS settings on geth do not allow this url (check the developer console for CORS errors)`)\n    }\n  }\n  if (tesseraEndpoint !== '') {\n    try {\n      await axios.get(`${tesseraEndpoint}`)\n    } catch (e) {\n      if (e.response) {\n        throw new Error(\n          `Error response from ${tesseraEndpoint}: ${e.response.status} ${e.response.statusText} ${e.response.data}`)\n      } else {\n        throw new Error(\n          `Could not connect to ${tesseraEndpoint}: ${e.message}. This could be: a. tessera is not running at this address, b. the port is not accessible, or c. CORS settings on tessera do not allow this url (check the developer console for CORS errors)`)\n      }\n    }\n  }\n}\n\nexport async function getAccounts () {\n  return await web3.eth.getAccounts()\n}\n\nexport async function getTesseraParties () {\n  if (!tessera) {\n    return []\n  }\n  const response = await axios.get(`${tessera}`)\n  return response.data.keys\n  .map(party => formatAsSelectOption(party))\n}\n\nfunction formatAsSelectOption (party) {\n  return {\n    value: party.key,\n    label: party.key,\n  }\n}\n\n\nexport async function deploy (contract, params, txMetadata) {\n  let abi = contract.abi\n  const constructor = getConstructor(abi)\n  const bytecode = '0x' + contract.evm.bytecode.object\n  const orderedParams = constructor.inputs.map(({ name, type }) => {\n    const value = params[name]\n    if (type.startsWith('bytes')) {\n      // web3js doesn't automatically convert string to bytes32\n      return fromAscii(value)\n    }\n    return value\n  })\n  const tx = {\n    from: txMetadata.account,\n    gasPrice: txMetadata.gasPrice,\n    gas: txMetadata.gasLimit,\n    value: Web3.utils.toWei(txMetadata.value, txMetadata.valueDenomination),\n    privateFrom: txMetadata.privateFrom,\n    privateFor: txMetadata.privateFor\n  }\n  const web3Contract = new web3.eth.Contract(abi)\n  const deployableContract = await web3Contract.deploy({\n    data: bytecode,\n    arguments: orderedParams,\n  })\n  const response = await deployableContract.send(tx)\n  return response\n}\n\nexport async function contractMethod (txMetadata, params, method, privateFor,\n  selectedPrivateFor, contract) {\n  const { account, gasLimit, gasPrice, value, valueDenomination } = txMetadata\n  var _params = Object.values(params)\n  var _sig_params = _params.map((value) => JSON.stringify(value)).join(', ')\n  var methodSig = method.name + '(' + _sig_params + ')'\n  var methodArgs = {\n    from: account,\n    gas: gasLimit,\n    gasPrice,\n    value: Web3.utils.toWei(value, valueDenomination),\n    args: _params,\n    privateFor: privateFor && selectedPrivateFor.filter(\n      ({ enabled }) => enabled).map(({ key }) => key)\n  }\n\n  await verifyContract(contract.address)\n\n  let web3Contract = new web3.eth.Contract(contract.abi, contract.address)\n  let web3Method = web3Contract.methods[method.name](..._params)\n  let callOrSend = method.constant ? 'call' : 'send'\n  const res = await web3Method[callOrSend](methodArgs)\n  return { methodSig, methodArgs, res }\n}\n\nexport async function verifyContract(address) {\n  const contractBinary = await web3.eth.getCode(address)\n  if (contractBinary === '0x') {\n    throw new Error(`Contract does not exist at ${address}`)\n  }\n}\n","export function setError (message = '') {\n  return { type: 'SET_ERROR', payload: message }\n}\n","import { contractMethod, deploy, verifyContract } from '../api'\nimport { getMethodSignature } from '../utils/ContractUtils'\nimport { setError } from './error'\n\nexport function setContractDeploying (isDeploying) {\n  return {\n    type: 'SET_CONTRACT_DEPLOYING',\n    payload: isDeploying,\n  }\n}\n\nexport function fetchCompilationSuccess (result) {\n  return {\n    type: 'FETCH_COMPILATION',\n    payload: result.data,\n  }\n}\n\nexport function setContractLoading (address, loading) {\n  return {\n    type: 'SET_CONTRACT_LOADING',\n    payload: {\n      address,\n      loading: loading\n    }\n  }\n}\n\nexport function methodCallSuccess (address, method, res) {\n  return {\n    type: 'METHOD_CALL_SUCCESS',\n    payload: {\n      address,\n      methodSignature: getMethodSignature(method),\n      result: res,\n    }\n  }\n}\n\nexport function resetTransactionResults () {\n  return {\n    type: 'RESET_TX_RESULTS',\n  }\n}\n\nexport function expandContract (address, expanded) {\n  return {\n    type: 'EXPAND_CONTRACT',\n    payload: { address, expand: !expanded }\n  }\n}\n\nexport function selectContract (contractName) {\n  return { type: 'SELECT_CONTRACT', payload: contractName }\n}\n\nexport function addContract (contract, address, txMetadata) {\n  return {\n    type: 'ADD_CONTRACT',\n    payload: {\n      ...contract,\n      address: address,\n      privateFor: txMetadata.privateFor,\n      privateFrom: txMetadata.privateFrom\n    }\n  }\n}\n\nexport function removeContract (address) {\n  return { type: 'REMOVE_CONTRACT', payload: address }\n}\n\nexport function fetchCompilationResult (client) {\n  return async dispatch => {\n    try {\n      const result = await client.solidity.getCompilationResult()\n      dispatch(fetchCompilationSuccess(result))\n    } catch (e) {\n      console.log('error getting compilation result', e)\n    }\n  }\n}\n\nexport function doMethodCall (contract, method, params, txMetadata, privateFor,\n  selectedPrivateFor) {\n  return async dispatch => {\n    dispatch(setContractLoading(contract.address, true))\n    try {\n      const __ret = await contractMethod(txMetadata, params, method, privateFor,\n        selectedPrivateFor, contract)\n      const res = __ret.res\n      dispatch(methodCallSuccess(contract.address, method, res))\n      dispatch(setError())\n    } catch (e) {\n      console.error('Error calling contract method', e)\n      dispatch(setError(e.message))\n    }\n    dispatch(setContractLoading(contract.address, false))\n  }\n}\n\nexport function addExistingContract (contract, address, txMetadata) {\n  return async dispatch => {\n    dispatch(setContractDeploying(true))\n    try {\n      await verifyContract(address)\n      dispatch(addContract(contract, address, txMetadata))\n      dispatch(setError())\n    } catch (e) {\n      console.error('Error attaching to existing contract', e)\n      dispatch(setError(e.message))\n    }\n    dispatch(setContractDeploying(false))\n  }\n}\n\nexport function deployContract (params, contract, txMetadata) {\n  return async dispatch => {\n    dispatch(setContractDeploying(true))\n    try {\n      const response = await deploy(contract, params, txMetadata)\n      dispatch(addContract(contract, response.options.address, txMetadata))\n      dispatch(setError())\n    } catch (e) {\n      console.error('Error deploying contract', e)\n      dispatch(setError(e.message))\n    }\n    dispatch(setContractDeploying(false))\n  }\n}\n","export function addPublicKey (option) {\n  return {\n    type: 'ADD_PUBLIC_KEY',\n    payload: option,\n  }\n}\n\nexport function removePublicKey (key) {\n  return {\n    type: 'REMOVE_PUBLIC_KEY',\n    payload: key,\n  }\n}\n\nexport function setTesseraOptions (options) {\n  return {\n    type: 'SET_TESSERA_OPTIONS',\n    payload: options,\n  }\n}\n","import { getAccounts, getTesseraParties, testUrls, updateWeb3Url } from '../api'\nimport { setTesseraOptions } from './tessera'\nimport { setError } from './error'\nimport { resetTransactionResults } from './contracts'\n\nexport function editNetwork (edit) {\n  return { type: 'EDIT_NETWORK', payload: edit }\n}\n\nfunction setNetwork (endpoint, tesseraEndpoint, accounts, status, editing) {\n  return {\n    type: 'SET_NETWORK',\n    payload: {\n      endpoint,\n      tesseraEndpoint,\n      accounts,\n      status,\n      editing\n    }\n  }\n}\n\n/**\n * This action attempts to connect to the network, gets accounts, and gets the\n * tessera party keys if a url is provided. It then updates the current\n * network whether or not there were errors. If there were errors, it shows\n * them. It also resets transaction results in the deployed contract widgets\n * after connection to prevent confusion when switching nodes.\n *\n * @param endpoint Geth RPC Url (http://localhost:22000)\n * @param tesseraEndpoint Tessera party keys endpoint (http://localhost:9081/partyinfo/keys)\n * @returns thunk middleware dispatch function\n */\nexport function connectToNetwork (endpoint, tesseraEndpoint) {\n  return async dispatch => {\n    dispatch({ type: 'SET_NETWORK_CONNECTING' })\n    let accounts = [], status = 'Disconnected', editing = true, error = ''\n    try {\n      if (endpoint) {\n        await updateWeb3Url(endpoint, tesseraEndpoint)\n        status = 'Connected'\n        editing = false\n        accounts = await getAccounts()\n        const options = await getTesseraParties()\n        dispatch(setTesseraOptions(options))\n      } else {\n        error = 'Please connect to a quorum node'\n      }\n\n    } catch (e) {\n      console.log('Error fetching network data', e.message)\n      error = e.message\n    }\n\n    dispatch(setError(error))\n\n    dispatch(setNetwork(endpoint, tesseraEndpoint, accounts, status, editing))\n\n    dispatch(resetTransactionResults())\n  }\n}\n\n/**\n * This action attempts to connect to the given network, connecting if\n * successful and showing an error if unsuccessful.\n *\n * @param endpoint Geth RPC Url (http://localhost:22000)\n * @param tesseraEndpoint Tessera party keys endpoint (http://localhost:9081/partyinfo/keys)\n * @returns thunk middleware dispatch function\n */\nexport function saveNetwork (endpoint = '', tesseraEndpoint = '') {\n  return async dispatch => {\n    try {\n      if (tesseraEndpoint.endsWith('/')) {\n        tesseraEndpoint = tesseraEndpoint.substring(0,\n          tesseraEndpoint.length - 1)\n      }\n\n      await testUrls(endpoint, tesseraEndpoint)\n      dispatch(connectToNetwork(endpoint, tesseraEndpoint))\n\n    } catch (e) {\n      console.log('Error fetching network data', e.message)\n      dispatch(setError(e.message))\n    }\n  }\n}\n","export function updatePrivateFor (selection) {\n  return {\n    type: 'UPDATE_PRIVATE_FOR',\n    payload: selection && selection.map((option) => option.value)\n  }\n}\n\nexport function selectAccount (account) {\n  return { type: 'SELECT_ACCOUNT', payload: account }\n}\n\nexport function changeGasPrice (value) {\n  return {\n    type: 'CHANGE_GAS_PRICE',\n    payload: value\n  }\n}\n\nexport function changeGasLimit (value) {\n  return {\n    type: 'CHANGE_GAS_LIMIT',\n    payload: value\n  }\n}\n\nexport function changeValue (value) {\n  return { type: 'CHANGE_VALUE', payload: value }\n}\n\nexport function changeValueDenomination (value) {\n  return {\n    type: 'CHANGE_VALUE_DENOMINATION',\n    payload: value\n  }\n}\n","import Popover from 'react-bootstrap/Popover'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport React from 'react'\n\n\nexport const InputTooltip = ({ text, enabled, children }) => {\n  if(!enabled) {\n    return children\n  }\n\n  return <OverlayTrigger\n    placement='bottom-start'\n    trigger={'hover'}\n    show={'false'}\n    overlay={\n      <Popover className=\"bg-light\" id=\"popover-basic\">\n        <Popover.Content>\n          {text}\n        </Popover.Content>\n      </Popover>\n    }\n  >\n    {children}\n  </OverlayTrigger>\n}\n","import React from 'react'\nimport {\n  iconStyle,\n  labelStyle,\n  networkStyle,\n  statusStyle,\n  txMetaRowRightStyle,\n  txMetaRowStyle\n} from '../utils/Styles'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { editNetwork, saveNetwork, setError, connectToNetwork } from '../actions'\nimport { InputTooltip } from './InputTooltip'\n\nexport function Network () {\n  const state = useSelector(state => state)\n  const dispatch = useDispatch()\n  const {\n    editing,\n    status,\n    endpoint,\n    tesseraEndpoint,\n  } = state.network\n\n  const [endpointInput, setEndpointInput] = React.useState(endpoint)\n  const [tesseraEndpointInput, setTesseraEndpointInput] = React.useState(\n    tesseraEndpoint)\n\n  React.useEffect(() => {\n    // in case network changes after render\n    setEndpointInput(endpoint)\n    setTesseraEndpointInput(tesseraEndpoint)\n  }, [endpoint, tesseraEndpoint])\n\n  const onEdit = () => {\n    dispatch(editNetwork(true))\n  }\n  const onSave = async () => {\n    dispatch(saveNetwork(endpointInput, tesseraEndpointInput))\n  }\n  const onCancel = () => {\n    // reset to state values\n    setEndpointInput(endpoint)\n    setTesseraEndpointInput(tesseraEndpoint)\n    dispatch(editNetwork(false))\n    dispatch(setError())\n  }\n\n  const onRefresh = () => {\n    dispatch(connectToNetwork(endpoint, tesseraEndpoint))\n  }\n\n  return <form style={networkStyle}\n    onSubmit={async (e) => {\n      e.preventDefault()\n      await onSave()\n    }}>\n    <div style={txMetaRowStyle}>\n      <div style={labelStyle}>\n        Geth RPC\n      </div>\n      <InputTooltip\n        enabled={editing}\n        text=\"This should be the url for your geth node\\'s RPC endpoint. It should include http(s), host/ip, and port. For example: http://localhost:22000/\">\n        <input className=\"form-control\"\n               // placeholder=\"http://localhost:22000\"\n               type=\"text\"\n               disabled={!editing}\n               value={endpointInput}\n               onChange={(e) => setEndpointInput(\n               e.target.value)}/>\n      </InputTooltip>\n    </div>\n    <div style={txMetaRowStyle}>\n      <div style={labelStyle}>Tessera</div>\n      <InputTooltip\n        enabled={editing}\n        text=\"This should be the url for your tessera keys endpoint. It should include http(s), host/ip, port, and path. For example: http://localhost:9081/partyInfo/keys\">\n        <input className=\"form-control\"\n               type=\"text\"\n               placeholder=\"(Optional)\"\n               disabled={!editing}\n               value={tesseraEndpointInput}\n               onChange={(e) => setTesseraEndpointInput(\n               e.target.value)}/>\n      </InputTooltip>\n    </div>\n    {editing ?\n      <div style={txMetaRowRightStyle}>\n        <i style={iconStyle} className=\"fa fa-close\"\n           onClick={() => onCancel()}/>\n        <i style={iconStyle} className=\"fa fa-check\" onClick={() => onSave()}/>\n      </div>\n      :\n      <div style={txMetaRowRightStyle}>\n        <div style={statusStyle(status)}>{status}</div>\n        <i style={iconStyle} className=\"fa fa-refresh\"\n           onClick={() => onRefresh()}/>\n        <i style={iconStyle} className=\"fa fa-pencil\" onClick={() => onEdit()}/>\n      </div>\n    }\n    <button type=\"submit\" style={{display: 'none'}} />\n  </form>\n}\n","import React from 'react'\nimport { components } from 'react-select/dist/react-select.browser.esm'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport {\n  addPublicKey,\n  removePublicKey,\n  setError,\n  updatePrivateFor\n} from '../actions'\nimport {\n  iconStyle,\n  optionLabelContainerStyle,\n  optionLabelStyle,\n  optionStyle\n} from '../utils/Styles'\nimport Creatable from 'react-select/creatable/dist/react-select.esm'\nimport Select from 'react-select'\nimport isBase64 from 'validator/lib/isBase64'\n\nexport function PrivateFor () {\n  const dispatch = useDispatch()\n\n  const privateFor = useSelector(state => state.txMetadata.privateFor)\n  const keysFromUser =\n    useSelector(state => state.tessera.keysFromUser, shallowEqual)\n  const keysFromServer =\n    useSelector(state => state.tessera.keysFromServer, shallowEqual)\n\n  const isFromServer = keysFromServer.length > 0\n\n  // don't allow user-added keys when using keys retrieved from the server.\n  // If a key is not in the list, the transaction will be rejected anyway.\n  const options = isFromServer ? keysFromServer : keysFromUser\n  const selectedOptions = options.filter(\n    (option) => privateFor && privateFor.includes(option.value))\n\n  // Don't allow creation of options if we're using keys from the server\n  const SelectContainer = isFromServer ? Select : Creatable\n\n  return <SelectContainer\n    components={{ Option }}\n    placeholder=\"Select or add...\"\n    options={options}\n    value={selectedOptions}\n    closeMenuOnSelect={true}\n    isMulti\n    autosize=\"false\"\n    onChange={(selection) => dispatch(updatePrivateFor(selection))}\n    formatCreateLabel={(value) => `Add '${value}'`}\n    onCreateOption={(inputValue) => {\n\n      if(inputValue.length !== 44) {\n        dispatch(setError(`Public key length must equal 44: (actual: ${inputValue.length}) ${inputValue}`))\n        return;\n      }\n      if(!isBase64(inputValue)) {\n        dispatch(setError(`Public key must be a valid base64 string: ${inputValue}`))\n        return;\n      }\n\n      const option = {\n        label: inputValue,\n        value: inputValue,\n        userCreated: true\n      }\n      dispatch(addPublicKey(option))\n      dispatch(updatePrivateFor([...selectedOptions, option]))\n    }}/>\n}\n\n// custom react-select option to allow deleting of user-added keys\nconst Option = (props) => {\n  const dispatch = useDispatch()\n\n  const option = props.data\n\n  return <components.Option {...props}>\n    <div style={optionStyle}>\n      <div style={optionLabelContainerStyle}>\n        <div style={optionLabelStyle}>\n          {option.label}\n        </div>\n      </div>\n      {option.userCreated &&\n      <i style={iconStyle} className=\"fa fa-close\"\n         onClick={() => dispatch(removePublicKey(option.value))}/>\n      }\n    </div>\n  </components.Option>\n}\n\n\n","import React, { useEffect } from 'react'\nimport { PrivateFor } from './PrivateFor'\nimport {\n  formContainerStyle,\n  iconStyle,\n  inlineInputStyle,\n  labelStyle,\n  reactSelectStyle,\n  txMetaRowStyle\n} from '../utils/Styles'\nimport copy from 'copy-to-clipboard'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  changeGasLimit,\n  changeGasPrice,\n  changeValue,\n  changeValueDenomination,\n  selectAccount\n} from '../actions'\n\nexport function TxMetadata () {\n  const state = useSelector(state => state)\n  const dispatch = useDispatch()\n  const {\n    network: { accounts = [] },\n    txMetadata: {\n      account,\n      gasLimit,\n      gasPrice,\n      value,\n      valueDenomination,\n    }\n  } = state\n\n  const copyAddress = async () => {\n    try {\n      await copy(account)\n    } catch (e) {\n      console.error('Could not copy to clipboard: ', account, e)\n    }\n  }\n\n\n  useEffect(() => {\n    // maybe a better way to do this, but select the first account if unset or\n    // if selected account is no longer in the list of accounts\n    if (accounts.length > 0 && !accounts.includes(account)) {\n      dispatch(selectAccount(accounts[0]))\n    }\n  }, [accounts])\n\n  return <div style={formContainerStyle}>\n    <div style={txMetaRowStyle}>\n      <div style={labelStyle}>Account</div>\n      <select className=\"form-control\" defaultValue={account}\n              onChange={(e) => dispatch(selectAccount(e.target.value))}>\n        {accounts.map(\n          (account) => <option key={account}\n                               value={account}>{account}</option>)}\n      </select>\n      <i style={iconStyle}\n         className=\"fa fa-clipboard\"\n         onClick={(e) => copyAddress()}/>\n    </div>\n    <div style={txMetaRowStyle}>\n      <div style={labelStyle}>Gas price</div>\n      <input style={inlineInputStyle} className=\"form-control\" type=\"text\" value={gasPrice}\n                           onChange={(e) => dispatch(changeGasPrice(e.target.value))}/>\n    </div>\n    <div style={txMetaRowStyle}>\n      <div style={labelStyle}>Gas limit</div>\n      <input style={inlineInputStyle} className=\"form-control\" type=\"text\" value={gasLimit}\n             onChange={(e) => dispatch(changeGasLimit(e.target.value))}/>\n    </div>\n    <div style={txMetaRowStyle}>\n      <div style={labelStyle}>Value</div>\n      <input style={inlineInputStyle} className=\"form-control\" type=\"text\" value={value}\n             onChange={(e) => dispatch(\n               changeValue(e.target.value))}/>\n      <select style={inlineInputStyle} className=\"form-control\" defaultValue={valueDenomination}\n              onChange={(e) => dispatch(changeValueDenomination(e.target.value))}>\n        <option value=\"wei\">wei</option>\n        <option value=\"gwei\">gwei</option>\n        <option value=\"finney\">finney</option>\n        <option value=\"ether\">ether</option>\n      </select>\n    </div>\n    <div style={txMetaRowStyle}>\n      <div style={labelStyle}>Private for</div>\n      <div style={reactSelectStyle}><PrivateFor/></div>\n    </div>\n  </div>\n}\n","import React, { useState } from 'react'\nimport { toAscii } from '../utils/TypeUtils'\nimport {\n  addonButtonStyle,\n  buttonStyle,\n  containerStyle,\n  iconStyle,\n  inputStyle\n} from '../utils/Styles'\n\nexport const Method = ({ method, onSubmit, result, disabled }) => {\n\n  const [expanded, setExpanded] = useState(false)\n  const [inputValues, setInputValues] = useState({});\n  const [singleLineInput, setSingleLineInput] = useState('')\n\n  const submit = (e) => {\n    e.stopPropagation();\n    onSubmit(inputValues)\n  };\n\n  const onSingleLineInputChange = (inputString) => {\n    setSingleLineInput(inputString)\n    const newInputValues = {}\n    inputString.split(',').forEach((value, i) => {\n      if (method.inputs.length <= i) {\n        return\n      }\n      let inputName = method.inputs[i].name\n      newInputValues[inputName] = value.trim()\n    })\n    setInputValues(newInputValues)\n  }\n\n  const onInputChange = (inputName, value) => {\n    setInputValues({\n      ...inputValues,\n      [inputName]: value\n    });\n  };\n\n  const onCaretClick = (e, shouldExpand) => {\n    e.preventDefault()\n    if (!shouldExpand) {\n      setSingleLineInput(method.inputs.map((input) => inputValues[input.name]).filter((value) => value != null).join(', '))\n    }\n    setExpanded(shouldExpand)\n  }\n\n  const methodName = method.name || 'Deploy' // constructor doesn't have a name\n\n  function expandedView () {\n    return <div style={{display: 'flex', flexDirection: 'column'}}>\n      <div style={containerStyle}>\n        <div style={{ flexGrow: 1 }}>{methodName}</div>\n        <i style={iconStyle} title=\"Deploy\" className=\"fa fa-caret-up methCaret\"\n           onClick={(e) => onCaretClick(e, false)}/>\n      </div>\n      {method.inputs.map((input) =>\n        <TransactionInput\n          disabled={disabled}\n          key={methodName + input.name}\n          onChange={onInputChange}\n          value={inputValues[input.name]}\n          input={input}/>\n      )}\n      <button\n        disabled={disabled}\n        onClick={submit}\n        style={{ marginTop: 8, alignSelf: 'flex-end' }}\n        className={`btn btn-sm btn-${method.constant ? 'info' : 'warning'}`}>\n        {methodName}\n      </button>\n    </div>\n  }\n\n  function collapsedView () {\n    return <div style={containerStyle}>\n      <button\n        disabled={disabled}\n        onClick={submit}\n        style={buttonStyle}\n        className={`btn btn-sm btn-${method.constant ? 'info' : 'warning'}`}>\n        {methodName}\n      </button>\n      {method.inputs.length > 0 &&\n      <input placeholder={method.inputs.map((input) => `${input.type} ${input.name}`).join(', ')}\n             disabled={disabled}\n             style={inputStyle}\n             onChange={(e) => onSingleLineInputChange(e.target.value)}\n             value={singleLineInput}\n             type=\"text\"/>}\n      { method.inputs.length > 0 && <i style={iconStyle} title=\"Deploy\" className=\"fa fa-caret-down methCaret\"\n         onClick={(e) => onCaretClick(e, true)}/>}\n    </div>\n  }\n\n  return <div className=\"method\"\n              data-method={methodName}>\n    {expanded ? expandedView() : collapsedView()}\n    {result && <div>{normalizeResult(result, method.outputs).map(([key, value]) => `${key}: ${value}`).join(', ')}</div>}\n  </div>\n};\n\nexport const TransactionInput = ({ input, onChange, value, disabled }) => {\n\n  const initialValues = value ? value.toString().split(',').map((v) => v.trim()) : ['']\n  const isDynamic = isDynamicArray(input);\n  const [values, setValues] = useState(initialValues)\n  // const [numInputs, setNumInputs] = useState(1);\n\n  const setValuesAndNotify = (newValues) => {\n    onChange(input.name, isDynamic ? newValues : newValues[0]);\n    setValues(newValues);\n  };\n\n  const onInputChange = (index, value) => {\n    const newValues = [...values];\n    newValues[index] = value;\n    setValuesAndNotify(newValues);\n  };\n\n  const onPlus = (index) => {\n    const newValues = [...values];\n    newValues.splice(index + 1, 0, \"\");\n    setValuesAndNotify(newValues);\n  };\n\n  const onMinus = (index) => {\n    const newValues = [...values];\n    newValues.splice(index, 1);\n    setValuesAndNotify(newValues);\n  };\n\n  return <div>\n    <div>{getInputPlaceholder(input)}:</div>\n    {values.map((value, index) => (\n      <div key={`${input.name}${index}`} className=\"input-group method-inputs\"\n           data-param={input.name}>\n        <input type=\"text\" data-param={input.name}\n               data-type={input.type}\n               value={value}\n               disabled={disabled}\n               onChange={(e) => onInputChange(index, e.target.value)}>\n        </input>\n        {isDynamic &&\n        // handle dynamic array input types - like bytes32[]\n        ([\n          <button style={addonButtonStyle}\n                  key={'minus'}\n                  onClick={() => onMinus(index)}\n                  disabled={disabled}\n                  className=\"btn btn-sm remove input-group-addon text-danger\">\n            <i className=\"fa fa-minus\"/>\n          </button>,\n          <button style={addonButtonStyle}\n                  key={'plus'}\n                  onClick={() => onPlus(index)}\n                  disabled={disabled}\n                  className=\"btn btn-sm add input-group-addon text-success\">\n            <i className=\"fa fa-plus\"/>\n          </button>\n        ])\n        }\n      </div>\n    ))}\n  </div>\n}\n\n// public field mapping/array getter inputs don't have names, make it 'input'\nconst getInputPlaceholder =\n    (input) => `${input.name || \"input\"} (${input.type})`;\n\nconst isDynamicArray = (input) => input.type.match(/\\[(\\d+)?\\]/);\n\nconst normalizeResult = (result, outputs = []) => {\n  // call results with multiple return values are objects with numbered keys\n  // normalize single value returns and 'send' responses\n  if (typeof result !== 'object') {\n    let singleOutput = outputs[0]\n    result = { [singleOutput.name ? singleOutput.name : 0]: result }\n  } else if ('status' in result) {\n    return [['Status', result.status ? 'Success' : 'Failed']]\n  }\n\n  return outputs.map((output, index) => {\n    let key = index\n    if (output.name && output.name in result) {\n      key = output.name\n    }\n    let value = result[key]\n\n    if (output.type.startsWith('bytes')) {\n      // TODO maybe they want bytes, not a string. show both\n      value = toAscii(value)\n    }\n    return [key, value]\n  })\n}\n","import React, { useState } from 'react'\nimport { Method } from './Transact'\nimport {\n  buttonStyle,\n  containerStyle,\n  inputStyle,\n  orStyle\n} from '../utils/Styles'\n\nexport const Constructor = ({ method, onDeploy, onExisting, disabled }) => {\n\n  const [existingAddress, setExistingAddress] = useState('')\n\n  return <div>\n    <Method key={'constructor'}\n            disabled={disabled}\n            method={method}\n            onSubmit={(inputValues) => onDeploy(inputValues)}\n    />\n    <div style={orStyle}>or</div>\n    <div style={containerStyle} className=\"btn-group-sm\">\n      <button\n        style={buttonStyle}\n        className=\"btn btn-sm btn-info\"\n        disabled={disabled || existingAddress === ''}\n        onClick={() => onExisting(existingAddress)}>\n        At Address\n      </button>\n      <input placeholder=\"Existing contract address\"\n             disabled={disabled}\n             style={inputStyle}\n             onChange={(e) => setExistingAddress(e.target.value)}\n             value={existingAddress}\n             type=\"text\"/>\n    </div>\n  </div>\n\n}\n","import React, { useEffect } from 'react'\nimport { Constructor } from './Constructor'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { addExistingContract, deployContract, selectContract } from '../actions'\nimport { getConstructor } from '../utils/ContractUtils'\n\nexport function Deploy() {\n  const txMetadata = useSelector(state => state.txMetadata, shallowEqual)\n  const {\n    contracts,\n    selectedContract,\n    deploying\n  } = useSelector(state => state.compilation)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    // maybe a better way to do this, but select the first contract if unset or\n    // if selected contract is no longer in the list of contracts\n    if (!(selectedContract in contracts)) {\n      dispatch(selectContract(Object.keys(contracts)[0]))\n    }\n  }, [contracts])\n\n\n  return <div style={{width: '100%'}}>\n    <div>Compiled Contracts:</div>\n    <select className=\"form-control\"\n            defaultValue={selectedContract}\n            onChange={(e) => dispatch(selectContract(e.target.value))}>\n      {Object.entries(contracts).map(\n        ([name, data]) => <option key={name} value={name}>{name}</option>)}\n    </select>\n    {contracts[selectedContract] &&\n    <Constructor\n      disabled={deploying}\n      onDeploy={params => dispatch(\n        deployContract(params, contracts[selectedContract], txMetadata))}\n      onExisting={(address) => {\n        dispatch(addExistingContract(contracts[selectedContract], address, txMetadata))\n      }}\n      method={getConstructor(contracts[selectedContract].abi)}\n    />}\n    </div>\n}\n\n","import React from 'react'\nimport { Method } from './Transact'\nimport copy from 'copy-to-clipboard'\nimport {\n  bodyStyle,\n  checkboxLabelStyle,\n  contractStyle,\n  ellipsisStyle,\n  headerStyle,\n  iconStyle\n} from '../utils/Styles'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { doMethodCall, expandContract, removeContract } from '../actions'\nimport { getMethodSignature } from '../utils/ContractUtils'\n\nexport function Contract ({ address }) {\n  const dispatch = useDispatch()\n  const txMetadata = useSelector(state => state.txMetadata)\n  const deployedContracts = useSelector(\n    state => state.deployed.deployedContracts)\n\n  const contract = deployedContracts[address]\n  const { expanded = false, contractName, privateFor, loading } = contract\n\n  const [selectedPrivateFor, setSelectedPrivateFor] = React.useState(\n    privateFor && privateFor.map(key => { return { enabled: true, key }}))\n\n  const getResultForMethod = (method) => {\n    return contract.results && contract.results[getMethodSignature(method)]\n  }\n\n  const copyAddress = async () => {\n    try {\n      // eslint-disable-next-line no-undef\n      await copy(address)\n    } catch (e) {\n      console.error(\"Could not copy to clipboard: \", address, e)\n    }\n  }\n\n  const renderHeader = () => <div className=\"alert alert-secondary p-2\"\n                                  style={headerStyle}>\n\n    <i style={iconStyle} title=\"Expand contract instance\"\n       className={`fa fa-caret-${expanded ? 'down' : 'right'} methCaret`}\n       onClick={(e) => dispatch(expandContract(address, expanded))}/>\n    <div className=\"input-group-text\"\n         style={ellipsisStyle}>{contractName}({address})\n    </div>\n    <i style={iconStyle} title=\"Copy contract address\"\n       className=\"fa fa-clipboard\"\n       onClick={(e) => copyAddress()}/>\n    <i style={iconStyle} title=\"Remove contract instance\"\n       className=\"fa fa-close\"\n       onClick={(e) => dispatch(removeContract(address))}/>\n  </div>\n\n  const renderExpanded = () => <div style={bodyStyle}>\n    {selectedPrivateFor &&\n    <div style={{ fontSize: 10 }}>\n      <div>Private for:</div>\n      {selectedPrivateFor.map(\n        ({ enabled, key }, index) => (\n          <label key={key} style={checkboxLabelStyle}>\n            <input type=\"checkbox\" name={key}\n                   style={{marginRight: 4}}\n                   checked={enabled}\n                   onChange={(e) => {\n                     const newSelected = [...selectedPrivateFor]\n                     newSelected[index].enabled = e.target.checked\n                     setSelectedPrivateFor(newSelected)\n                   }}/>\n            {key}\n          </label>\n        )\n      )}\n    </div>}\n    {\n      contract.abi.filter(\n        (method) => method.type === 'function')\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .map((method) => (\n        <Method key={method.name}\n                disabled={loading}\n                method={method}\n                result={getResultForMethod(method)}\n                onSubmit={(inputValues) => dispatch(\n                  doMethodCall(contract, method,\n                    inputValues, txMetadata, privateFor, selectedPrivateFor))}\n        />\n      ))\n    }\n  </div>\n\n  return (\n    <div style={contractStyle}>\n      {renderHeader()}\n      {expanded && renderExpanded()}\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { Contract } from './Contract'\nimport { useSelector } from 'react-redux'\nimport { formContainerStyle } from '../utils/Styles'\n\nexport function ContractList () {\n  const deployedAddresses = useSelector(state => state.deployed.deployedAddresses)\n\n  useEffect(() => {\n  }, [])\n\n  return <div style={formContainerStyle}>\n    <div>Deployed Contracts:</div>\n    {deployedAddresses.length === 0 && <div>None</div>}\n    {deployedAddresses.map((address) => <Contract key={address} address={address}/>)}\n  </div>\n}\n","import React from 'react'\nimport { errorContainerStyle, errorStyle, smallIconStyle } from '../utils/Styles'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setError } from '../actions'\n\nexport function Error () {\n  const dispatch = useDispatch()\n  const error = useSelector(state => state.error)\n  if (error === '') {\n    return ''\n  }\n  return <div style={errorContainerStyle}>\n    <div style={errorStyle}>\n      {error}\n    </div>\n    <i style={smallIconStyle} className=\"fa fa-close\"\n       onClick={() => dispatch(setError())}/>\n  </div>\n}\n","import React from 'react'\nimport './App.css'\nimport { Network } from './Network'\n\nimport { TxMetadata } from './TxMetadata'\nimport { Deploy } from './Deploy'\nimport { ContractList } from './ContractList'\nimport { appStyle, footerStyle, logoStyle } from '../utils/Styles'\nimport { Error } from './Error'\nimport { useSelector } from 'react-redux'\n\nfunction App() {\n  const isConnected = useSelector(\n    state => state.network.status !== 'Disconnected')\n\n  return (\n    <div style={appStyle} className=\"App\">\n      <Error/>\n      <Network/>\n      {isConnected && <TxMetadata/>}\n      <br/>\n      {isConnected && <Deploy/>}\n      <br/>\n      {isConnected && <ContractList/>}\n      <div style={{ flexGrow: 1 }}/>\n      <Footer/>\n    </div>\n  );\n}\n\nfunction Footer () {\n  return <div style={footerStyle}>\n    <div>v{process.env.REACT_APP_VERSION}</div>\n    <img style={logoStyle} src={'logo.png'} alt=\"Quorum Logo\"/>\n  </div>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = ''\n\nexport function errorReducer (state = initialState, action) {\n  switch (action.type) {\n    case 'SET_ERROR':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n","const initialState = {\n  endpoint: '',\n  tesseraEndpoint: '',\n  accounts: [],\n  editing: true,\n  status: 'Disconnected',\n}\n\nexport function networkReducer (network = initialState, action) {\n  switch (action.type) {\n    case 'SET_NETWORK':\n      localStorage.network = JSON.stringify(action.payload)\n      return action.payload\n\n    case 'EDIT_NETWORK':\n      return {\n        ...network,\n        editing: action.payload,\n      }\n\n    case 'SET_NETWORK_CONNECTING':\n      return {\n        ...network,\n        status: 'Connecting...',\n      }\n\n    default:\n      return network\n  }\n}\n","const initialState = {\n  gasLimit: '3000000',\n  gasPrice: '0',\n  value: '0',\n  valueDenomination: 'wei',\n}\n\nexport function txMetadataReducer (txMetadata = initialState, action) {\n  switch (action.type) {\n    case 'SELECT_ACCOUNT':\n      return {\n        ...txMetadata,\n        account: action.payload\n      }\n\n    case 'CHANGE_GAS_PRICE':\n      return {\n        ...txMetadata,\n        gasPrice: action.payload\n      }\n\n    case 'CHANGE_GAS_LIMIT':\n      return {\n        ...txMetadata,\n        gasLimit: action.payload\n      }\n\n    case 'CHANGE_VALUE':\n      return {\n        ...txMetadata,\n        value: action.payload\n      }\n\n    case 'CHANGE_VALUE_DENOMINATION':\n      return {\n        ...txMetadata,\n        valueDenomination: action.payload\n      }\n\n    case 'UPDATE_PRIVATE_FOR':\n      // empty [] privateFor is different than undefined. Disallow [] for now\n      const privateFor = action.payload && action.payload.length > 0\n        ? action.payload : undefined\n      return {\n        ...txMetadata,\n        privateFor,\n      }\n\n    default:\n      return txMetadata\n  }\n}\n","import { normalizeCompilationOutput } from '../utils/ContractUtils'\n\nconst initialState = {\n  contracts: {},\n  deploying: false\n}\n\nexport function compilationReducer (compilation = initialState,\n  action) {\n  switch (action.type) {\n    case 'FETCH_COMPILATION':\n      const contracts = normalizeCompilationOutput(action.payload)\n      return {\n        ...compilation,\n        contracts\n      }\n\n    case 'SELECT_CONTRACT':\n      return {\n        ...compilation,\n        selectedContract: action.payload\n      }\n\n    case 'SET_CONTRACT_DEPLOYING':\n      return {\n        ...compilation,\n        deploying: action.payload\n      }\n\n    default:\n      return compilation\n  }\n}\n","const initialState = {\n  keysFromUser: [],\n  keysFromServer: [],\n}\n\nexport function tesseraReducer (tessera = initialState, action) {\n  switch (action.type) {\n    case 'ADD_PUBLIC_KEY':\n      const keysFromUser = [...tessera.keysFromUser, action.payload]\n      localStorage.keysFromUser = JSON.stringify(keysFromUser)\n      return {\n        ...tessera,\n        keysFromUser,\n      }\n\n    case 'REMOVE_PUBLIC_KEY':\n      const newKeys = tessera.keysFromUser.filter(\n        (option) => option.value !== action.payload)\n      localStorage.keysFromUser = JSON.stringify(newKeys)\n      return {\n        ...tessera,\n        keysFromUser: newKeys,\n      }\n\n    case 'SET_TESSERA_OPTIONS':\n      return {\n        ...tessera,\n        keysFromServer: action.payload,\n      }\n\n    default:\n      return tessera\n  }\n}\n","const initialState = {\n  deployedAddresses: [],\n  deployedContracts: {},\n}\n\nexport function deployedReducer (deployed = initialState, action) {\n  switch (action.type) {\n    case 'ADD_CONTRACT':\n      const contract = action.payload\n      const newAddresses = [...deployed.deployedAddresses]\n      if (newAddresses.indexOf(contract.address) === -1) {\n        newAddresses.push(contract.address)\n      }\n      return {\n        ...deployed,\n        deployedAddresses: newAddresses,\n        deployedContracts: {\n          ...deployed.deployedContracts,\n          [contract.address]: contract\n        }\n      }\n\n    case 'REMOVE_CONTRACT':\n      const addressToDelete = action.payload\n      const newDeployedContracts = { ...deployed.deployedContracts }\n      delete newDeployedContracts[addressToDelete]\n      return {\n        ...deployed,\n        deployedAddresses: deployed.deployedAddresses.filter(\n          (a) => a !== addressToDelete),\n        deployedContracts: newDeployedContracts\n      }\n\n    case 'SET_CONTRACT_LOADING':\n      const toContract = deployed.deployedContracts[action.payload.address]\n      return {\n        ...deployed,\n        deployedContracts: {\n          ...deployed.deployedContracts,\n          [action.payload.address]: {\n            ...toContract,\n            loading: action.payload.loading,\n          }\n        }\n      }\n\n    case 'METHOD_CALL_SUCCESS':\n      const { address, methodSignature, result } = action.payload\n      const deployedContract = deployed.deployedContracts[address]\n      return {\n        ...deployed,\n        deployedContracts: {\n          ...deployed.deployedContracts,\n          [address]: {\n            ...deployedContract,\n            results: {\n              ...deployedContract.results,\n              [methodSignature]: result,\n            }\n          }\n        }\n      }\n\n    case 'RESET_TX_RESULTS':\n      const resetDeployedContracts = { ...deployed.deployedContracts }\n      deployed.deployedAddresses.forEach(\n        (address) => resetDeployedContracts[address].results = {})\n      return {\n        ...deployed,\n        deployedContracts: resetDeployedContracts\n      }\n\n    case 'EXPAND_CONTRACT':\n      const expandContract = deployed.deployedContracts[action.payload.address]\n      return {\n        ...deployed,\n        deployedContracts: {\n          ...deployed.deployedContracts,\n          [action.payload.address]: {\n            ...expandContract,\n            expanded: action.payload.expand,\n          }\n        }\n      }\n\n    default:\n      return deployed\n  }\n\n}\n","import { errorReducer } from './error'\nimport { networkReducer } from './network'\nimport { txMetadataReducer } from './txMetadata'\nimport { compilationReducer } from './compilation'\nimport { tesseraReducer } from './tessera'\nimport { deployedReducer } from './deployed'\nimport { combineReducers } from 'redux'\n\nexport const rootReducer = combineReducers({\n    error: errorReducer,\n    network: networkReducer,\n    txMetadata: txMetadataReducer,\n    compilation: compilationReducer,\n    tessera: tesseraReducer,\n    deployed: deployedReducer,\n  })\n\n","import { buildIframeClient, PluginClient } from '@remixproject/plugin'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\nimport { rootReducer } from './reducers'\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport {\n  addPublicKey,\n  connectToNetwork,\n  fetchCompilationResult\n} from './actions'\n\nclass QuorumPlugin extends PluginClient {\n\n}\n\nconst store = createStore(rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)))\n\nconst client = buildIframeClient(new QuorumPlugin())\nclient.onload(async () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App client={client}/>\n    </Provider>,\n    document.getElementById('root'))\n\n  initPlugin(client, store.dispatch)\n  .catch((e) => console.error('Error initializing plugin', e))\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n});\n\nif (module.hot) {\n  module.hot.accept('./components/App', () => {\n    const NextApp = require('./components/App').default\n    ReactDOM.render(\n      <Provider store={store}>\n        <NextApp client={client}/>\n      </Provider>,\n      document.getElementById('root')\n    )\n  })\n  module.hot.accept('./reducers', () => {\n    const nextRootReducer = require('./reducers').default\n    store.replaceReducer(nextRootReducer)\n  })\n}\n\n// we only want to subscribe to these once, so we do it outside of components\nasync function initPlugin (client, dispatch) {\n  if(process.env.NODE_ENV === 'development') {\n    await initDev(client, dispatch)\n  }\n\n  const savedNetwork = JSON.parse(localStorage.network || '{}')\n  dispatch(\n    connectToNetwork(savedNetwork.endpoint, savedNetwork.tesseraEndpoint))\n\n  const savedPublicKeys = JSON.parse(localStorage.keysFromUser || '[]')\n  savedPublicKeys.forEach((key) => dispatch(addPublicKey(key)))\n\n  dispatch(fetchCompilationResult(client))\n  client.solidity.on('compilationFinished',\n    (fileName, source, languageVersion, data) => {\n      // just refetching every time for now\n      dispatch(fetchCompilationResult(client))\n    })\n}\n\nasync function initDev (client) {\n  console.log('In development mode, adding 7nodes network')\n  await client.network.addNetwork(\n    { id: 10, name: 'quorum-examples-node-1', url: 'http://localhost:22000' })\n}\n"],"sourceRoot":""}